{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPFrlNcqRWI9N95lDcaiePs",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vamsiavula58/pplab/blob/main/Breast%20cancer%20prediction%20using%20machine%20learning\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "BREAST CANCER PREDICTION USING MACHINE LEARNING"
      ],
      "metadata": {
        "id": "QPd0kUc8C_8t"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "step-1:importing the packages,tools and datasets"
      ],
      "metadata": {
        "id": "3sQUv269DOfk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "data=pd.read_csv(\"/content/wisconsin dataset.csv\")\n",
        "data.head() # to view the data "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "id": "5_OtrxFMDMm_",
        "outputId": "e9f1a3cf-75aa-4063-da54-c0fb750dd021"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "0    842302         M        17.99         10.38          122.80     1001.0   \n",
              "1    842517         M        20.57         17.77          132.90     1326.0   \n",
              "2  84300903         M        19.69         21.25          130.00     1203.0   \n",
              "3  84348301         M        11.42         20.38           77.58      386.1   \n",
              "4  84358402         M        20.29         14.34          135.10     1297.0   \n",
              "\n",
              "   smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "0          0.11840           0.27760          0.3001              0.14710   \n",
              "1          0.08474           0.07864          0.0869              0.07017   \n",
              "2          0.10960           0.15990          0.1974              0.12790   \n",
              "3          0.14250           0.28390          0.2414              0.10520   \n",
              "4          0.10030           0.13280          0.1980              0.10430   \n",
              "\n",
              "   ...  texture_worst  perimeter_worst  area_worst  smoothness_worst  \\\n",
              "0  ...          17.33           184.60      2019.0            0.1622   \n",
              "1  ...          23.41           158.80      1956.0            0.1238   \n",
              "2  ...          25.53           152.50      1709.0            0.1444   \n",
              "3  ...          26.50            98.87       567.7            0.2098   \n",
              "4  ...          16.67           152.20      1575.0            0.1374   \n",
              "\n",
              "   compactness_worst  concavity_worst  concave points_worst  symmetry_worst  \\\n",
              "0             0.6656           0.7119                0.2654          0.4601   \n",
              "1             0.1866           0.2416                0.1860          0.2750   \n",
              "2             0.4245           0.4504                0.2430          0.3613   \n",
              "3             0.8663           0.6869                0.2575          0.6638   \n",
              "4             0.2050           0.4000                0.1625          0.2364   \n",
              "\n",
              "   fractal_dimension_worst  Unnamed: 32  \n",
              "0                  0.11890          NaN  \n",
              "1                  0.08902          NaN  \n",
              "2                  0.08758          NaN  \n",
              "3                  0.17300          NaN  \n",
              "4                  0.07678          NaN  \n",
              "\n",
              "[5 rows x 33 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6ce14509-e355-410a-b778-a46499106478\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "      <th>Unnamed: 32</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>842302</td>\n",
              "      <td>M</td>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.3001</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>...</td>\n",
              "      <td>17.33</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.1622</td>\n",
              "      <td>0.6656</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>842517</td>\n",
              "      <td>M</td>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.0869</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>...</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.1238</td>\n",
              "      <td>0.1866</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>84300903</td>\n",
              "      <td>M</td>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.1974</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>...</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.1444</td>\n",
              "      <td>0.4245</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>84348301</td>\n",
              "      <td>M</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.2414</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>...</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.2098</td>\n",
              "      <td>0.8663</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>84358402</td>\n",
              "      <td>M</td>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.1980</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>...</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.1374</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 33 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ce14509-e355-410a-b778-a46499106478')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6ce14509-e355-410a-b778-a46499106478 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6ce14509-e355-410a-b778-a46499106478');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "id": "R55lH99dEQXv",
        "outputId": "d726fda9-2555-44cb-dbbf-015d4a9c03f2"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 id  radius_mean  texture_mean  perimeter_mean    area_mean  \\\n",
              "count  5.690000e+02   569.000000    569.000000      569.000000   569.000000   \n",
              "mean   3.037183e+07    14.127292     19.289649       91.969033   654.889104   \n",
              "std    1.250206e+08     3.524049      4.301036       24.298981   351.914129   \n",
              "min    8.670000e+03     6.981000      9.710000       43.790000   143.500000   \n",
              "25%    8.692180e+05    11.700000     16.170000       75.170000   420.300000   \n",
              "50%    9.060240e+05    13.370000     18.840000       86.240000   551.100000   \n",
              "75%    8.813129e+06    15.780000     21.800000      104.100000   782.700000   \n",
              "max    9.113205e+08    28.110000     39.280000      188.500000  2501.000000   \n",
              "\n",
              "       smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "count       569.000000        569.000000      569.000000           569.000000   \n",
              "mean          0.096360          0.104341        0.088799             0.048919   \n",
              "std           0.014064          0.052813        0.079720             0.038803   \n",
              "min           0.052630          0.019380        0.000000             0.000000   \n",
              "25%           0.086370          0.064920        0.029560             0.020310   \n",
              "50%           0.095870          0.092630        0.061540             0.033500   \n",
              "75%           0.105300          0.130400        0.130700             0.074000   \n",
              "max           0.163400          0.345400        0.426800             0.201200   \n",
              "\n",
              "       symmetry_mean  ...  texture_worst  perimeter_worst   area_worst  \\\n",
              "count     569.000000  ...     569.000000       569.000000   569.000000   \n",
              "mean        0.181162  ...      25.677223       107.261213   880.583128   \n",
              "std         0.027414  ...       6.146258        33.602542   569.356993   \n",
              "min         0.106000  ...      12.020000        50.410000   185.200000   \n",
              "25%         0.161900  ...      21.080000        84.110000   515.300000   \n",
              "50%         0.179200  ...      25.410000        97.660000   686.500000   \n",
              "75%         0.195700  ...      29.720000       125.400000  1084.000000   \n",
              "max         0.304000  ...      49.540000       251.200000  4254.000000   \n",
              "\n",
              "       smoothness_worst  compactness_worst  concavity_worst  \\\n",
              "count        569.000000         569.000000       569.000000   \n",
              "mean           0.132369           0.254265         0.272188   \n",
              "std            0.022832           0.157336         0.208624   \n",
              "min            0.071170           0.027290         0.000000   \n",
              "25%            0.116600           0.147200         0.114500   \n",
              "50%            0.131300           0.211900         0.226700   \n",
              "75%            0.146000           0.339100         0.382900   \n",
              "max            0.222600           1.058000         1.252000   \n",
              "\n",
              "       concave points_worst  symmetry_worst  fractal_dimension_worst  \\\n",
              "count            569.000000      569.000000               569.000000   \n",
              "mean               0.114606        0.290076                 0.083946   \n",
              "std                0.065732        0.061867                 0.018061   \n",
              "min                0.000000        0.156500                 0.055040   \n",
              "25%                0.064930        0.250400                 0.071460   \n",
              "50%                0.099930        0.282200                 0.080040   \n",
              "75%                0.161400        0.317900                 0.092080   \n",
              "max                0.291000        0.663800                 0.207500   \n",
              "\n",
              "       Unnamed: 32  \n",
              "count          0.0  \n",
              "mean           NaN  \n",
              "std            NaN  \n",
              "min            NaN  \n",
              "25%            NaN  \n",
              "50%            NaN  \n",
              "75%            NaN  \n",
              "max            NaN  \n",
              "\n",
              "[8 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-94e27522-ee99-4411-91e8-759e2f464b07\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>symmetry_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "      <th>Unnamed: 32</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5.690000e+02</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.037183e+07</td>\n",
              "      <td>14.127292</td>\n",
              "      <td>19.289649</td>\n",
              "      <td>91.969033</td>\n",
              "      <td>654.889104</td>\n",
              "      <td>0.096360</td>\n",
              "      <td>0.104341</td>\n",
              "      <td>0.088799</td>\n",
              "      <td>0.048919</td>\n",
              "      <td>0.181162</td>\n",
              "      <td>...</td>\n",
              "      <td>25.677223</td>\n",
              "      <td>107.261213</td>\n",
              "      <td>880.583128</td>\n",
              "      <td>0.132369</td>\n",
              "      <td>0.254265</td>\n",
              "      <td>0.272188</td>\n",
              "      <td>0.114606</td>\n",
              "      <td>0.290076</td>\n",
              "      <td>0.083946</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.250206e+08</td>\n",
              "      <td>3.524049</td>\n",
              "      <td>4.301036</td>\n",
              "      <td>24.298981</td>\n",
              "      <td>351.914129</td>\n",
              "      <td>0.014064</td>\n",
              "      <td>0.052813</td>\n",
              "      <td>0.079720</td>\n",
              "      <td>0.038803</td>\n",
              "      <td>0.027414</td>\n",
              "      <td>...</td>\n",
              "      <td>6.146258</td>\n",
              "      <td>33.602542</td>\n",
              "      <td>569.356993</td>\n",
              "      <td>0.022832</td>\n",
              "      <td>0.157336</td>\n",
              "      <td>0.208624</td>\n",
              "      <td>0.065732</td>\n",
              "      <td>0.061867</td>\n",
              "      <td>0.018061</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>8.670000e+03</td>\n",
              "      <td>6.981000</td>\n",
              "      <td>9.710000</td>\n",
              "      <td>43.790000</td>\n",
              "      <td>143.500000</td>\n",
              "      <td>0.052630</td>\n",
              "      <td>0.019380</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.106000</td>\n",
              "      <td>...</td>\n",
              "      <td>12.020000</td>\n",
              "      <td>50.410000</td>\n",
              "      <td>185.200000</td>\n",
              "      <td>0.071170</td>\n",
              "      <td>0.027290</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.156500</td>\n",
              "      <td>0.055040</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>8.692180e+05</td>\n",
              "      <td>11.700000</td>\n",
              "      <td>16.170000</td>\n",
              "      <td>75.170000</td>\n",
              "      <td>420.300000</td>\n",
              "      <td>0.086370</td>\n",
              "      <td>0.064920</td>\n",
              "      <td>0.029560</td>\n",
              "      <td>0.020310</td>\n",
              "      <td>0.161900</td>\n",
              "      <td>...</td>\n",
              "      <td>21.080000</td>\n",
              "      <td>84.110000</td>\n",
              "      <td>515.300000</td>\n",
              "      <td>0.116600</td>\n",
              "      <td>0.147200</td>\n",
              "      <td>0.114500</td>\n",
              "      <td>0.064930</td>\n",
              "      <td>0.250400</td>\n",
              "      <td>0.071460</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>9.060240e+05</td>\n",
              "      <td>13.370000</td>\n",
              "      <td>18.840000</td>\n",
              "      <td>86.240000</td>\n",
              "      <td>551.100000</td>\n",
              "      <td>0.095870</td>\n",
              "      <td>0.092630</td>\n",
              "      <td>0.061540</td>\n",
              "      <td>0.033500</td>\n",
              "      <td>0.179200</td>\n",
              "      <td>...</td>\n",
              "      <td>25.410000</td>\n",
              "      <td>97.660000</td>\n",
              "      <td>686.500000</td>\n",
              "      <td>0.131300</td>\n",
              "      <td>0.211900</td>\n",
              "      <td>0.226700</td>\n",
              "      <td>0.099930</td>\n",
              "      <td>0.282200</td>\n",
              "      <td>0.080040</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>8.813129e+06</td>\n",
              "      <td>15.780000</td>\n",
              "      <td>21.800000</td>\n",
              "      <td>104.100000</td>\n",
              "      <td>782.700000</td>\n",
              "      <td>0.105300</td>\n",
              "      <td>0.130400</td>\n",
              "      <td>0.130700</td>\n",
              "      <td>0.074000</td>\n",
              "      <td>0.195700</td>\n",
              "      <td>...</td>\n",
              "      <td>29.720000</td>\n",
              "      <td>125.400000</td>\n",
              "      <td>1084.000000</td>\n",
              "      <td>0.146000</td>\n",
              "      <td>0.339100</td>\n",
              "      <td>0.382900</td>\n",
              "      <td>0.161400</td>\n",
              "      <td>0.317900</td>\n",
              "      <td>0.092080</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>9.113205e+08</td>\n",
              "      <td>28.110000</td>\n",
              "      <td>39.280000</td>\n",
              "      <td>188.500000</td>\n",
              "      <td>2501.000000</td>\n",
              "      <td>0.163400</td>\n",
              "      <td>0.345400</td>\n",
              "      <td>0.426800</td>\n",
              "      <td>0.201200</td>\n",
              "      <td>0.304000</td>\n",
              "      <td>...</td>\n",
              "      <td>49.540000</td>\n",
              "      <td>251.200000</td>\n",
              "      <td>4254.000000</td>\n",
              "      <td>0.222600</td>\n",
              "      <td>1.058000</td>\n",
              "      <td>1.252000</td>\n",
              "      <td>0.291000</td>\n",
              "      <td>0.663800</td>\n",
              "      <td>0.207500</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94e27522-ee99-4411-91e8-759e2f464b07')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-94e27522-ee99-4411-91e8-759e2f464b07 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-94e27522-ee99-4411-91e8-759e2f464b07');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wc8WUAvKETEM",
        "outputId": "3794e283-04b7-4080-fc08-0f66ad6701ae"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 569 entries, 0 to 568\n",
            "Data columns (total 33 columns):\n",
            " #   Column                   Non-Null Count  Dtype  \n",
            "---  ------                   --------------  -----  \n",
            " 0   id                       569 non-null    int64  \n",
            " 1   diagnosis                569 non-null    object \n",
            " 2   radius_mean              569 non-null    float64\n",
            " 3   texture_mean             569 non-null    float64\n",
            " 4   perimeter_mean           569 non-null    float64\n",
            " 5   area_mean                569 non-null    float64\n",
            " 6   smoothness_mean          569 non-null    float64\n",
            " 7   compactness_mean         569 non-null    float64\n",
            " 8   concavity_mean           569 non-null    float64\n",
            " 9   concave points_mean      569 non-null    float64\n",
            " 10  symmetry_mean            569 non-null    float64\n",
            " 11  fractal_dimension_mean   569 non-null    float64\n",
            " 12  radius_se                569 non-null    float64\n",
            " 13  texture_se               569 non-null    float64\n",
            " 14  perimeter_se             569 non-null    float64\n",
            " 15  area_se                  569 non-null    float64\n",
            " 16  smoothness_se            569 non-null    float64\n",
            " 17  compactness_se           569 non-null    float64\n",
            " 18  concavity_se             569 non-null    float64\n",
            " 19  concave points_se        569 non-null    float64\n",
            " 20  symmetry_se              569 non-null    float64\n",
            " 21  fractal_dimension_se     569 non-null    float64\n",
            " 22  radius_worst             569 non-null    float64\n",
            " 23  texture_worst            569 non-null    float64\n",
            " 24  perimeter_worst          569 non-null    float64\n",
            " 25  area_worst               569 non-null    float64\n",
            " 26  smoothness_worst         569 non-null    float64\n",
            " 27  compactness_worst        569 non-null    float64\n",
            " 28  concavity_worst          569 non-null    float64\n",
            " 29  concave points_worst     569 non-null    float64\n",
            " 30  symmetry_worst           569 non-null    float64\n",
            " 31  fractal_dimension_worst  569 non-null    float64\n",
            " 32  Unnamed: 32              0 non-null      float64\n",
            "dtypes: float64(31), int64(1), object(1)\n",
            "memory usage: 146.8+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isna()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "XIdxjPSNEg99",
        "outputId": "638a67cd-2ad9-43fe-fea6-dcc1a0b61ed6"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id  diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "0    False      False        False         False           False      False   \n",
              "1    False      False        False         False           False      False   \n",
              "2    False      False        False         False           False      False   \n",
              "3    False      False        False         False           False      False   \n",
              "4    False      False        False         False           False      False   \n",
              "..     ...        ...          ...           ...             ...        ...   \n",
              "564  False      False        False         False           False      False   \n",
              "565  False      False        False         False           False      False   \n",
              "566  False      False        False         False           False      False   \n",
              "567  False      False        False         False           False      False   \n",
              "568  False      False        False         False           False      False   \n",
              "\n",
              "     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "0              False             False           False                False   \n",
              "1              False             False           False                False   \n",
              "2              False             False           False                False   \n",
              "3              False             False           False                False   \n",
              "4              False             False           False                False   \n",
              "..               ...               ...             ...                  ...   \n",
              "564            False             False           False                False   \n",
              "565            False             False           False                False   \n",
              "566            False             False           False                False   \n",
              "567            False             False           False                False   \n",
              "568            False             False           False                False   \n",
              "\n",
              "     ...  texture_worst  perimeter_worst  area_worst  smoothness_worst  \\\n",
              "0    ...          False            False       False             False   \n",
              "1    ...          False            False       False             False   \n",
              "2    ...          False            False       False             False   \n",
              "3    ...          False            False       False             False   \n",
              "4    ...          False            False       False             False   \n",
              "..   ...            ...              ...         ...               ...   \n",
              "564  ...          False            False       False             False   \n",
              "565  ...          False            False       False             False   \n",
              "566  ...          False            False       False             False   \n",
              "567  ...          False            False       False             False   \n",
              "568  ...          False            False       False             False   \n",
              "\n",
              "     compactness_worst  concavity_worst  concave points_worst  symmetry_worst  \\\n",
              "0                False            False                 False           False   \n",
              "1                False            False                 False           False   \n",
              "2                False            False                 False           False   \n",
              "3                False            False                 False           False   \n",
              "4                False            False                 False           False   \n",
              "..                 ...              ...                   ...             ...   \n",
              "564              False            False                 False           False   \n",
              "565              False            False                 False           False   \n",
              "566              False            False                 False           False   \n",
              "567              False            False                 False           False   \n",
              "568              False            False                 False           False   \n",
              "\n",
              "     fractal_dimension_worst  Unnamed: 32  \n",
              "0                      False         True  \n",
              "1                      False         True  \n",
              "2                      False         True  \n",
              "3                      False         True  \n",
              "4                      False         True  \n",
              "..                       ...          ...  \n",
              "564                    False         True  \n",
              "565                    False         True  \n",
              "566                    False         True  \n",
              "567                    False         True  \n",
              "568                    False         True  \n",
              "\n",
              "[569 rows x 33 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-861c9b39-1524-4483-8944-83ff7b837cea\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "      <th>Unnamed: 32</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>566</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>567</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>569 rows × 33 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-861c9b39-1524-4483-8944-83ff7b837cea')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-861c9b39-1524-4483-8944-83ff7b837cea button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-861c9b39-1524-4483-8944-83ff7b837cea');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YgDcfU0tE5WX",
        "outputId": "5d8f6665-53bd-4eed-e3a9-d857cb66f0e6"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                           0\n",
              "diagnosis                    0\n",
              "radius_mean                  0\n",
              "texture_mean                 0\n",
              "perimeter_mean               0\n",
              "area_mean                    0\n",
              "smoothness_mean              0\n",
              "compactness_mean             0\n",
              "concavity_mean               0\n",
              "concave points_mean          0\n",
              "symmetry_mean                0\n",
              "fractal_dimension_mean       0\n",
              "radius_se                    0\n",
              "texture_se                   0\n",
              "perimeter_se                 0\n",
              "area_se                      0\n",
              "smoothness_se                0\n",
              "compactness_se               0\n",
              "concavity_se                 0\n",
              "concave points_se            0\n",
              "symmetry_se                  0\n",
              "fractal_dimension_se         0\n",
              "radius_worst                 0\n",
              "texture_worst                0\n",
              "perimeter_worst              0\n",
              "area_worst                   0\n",
              "smoothness_worst             0\n",
              "compactness_worst            0\n",
              "concavity_worst              0\n",
              "concave points_worst         0\n",
              "symmetry_worst               0\n",
              "fractal_dimension_worst      0\n",
              "Unnamed: 32                569\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#in last column we can see it contains only null values so we can delete that row\n",
        "data.drop(columns='Unnamed: 32',inplace=True)"
      ],
      "metadata": {
        "id": "PkJkeN00E_cJ"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dFfuBecIFrTG",
        "outputId": "34412aae-2d69-4d69-a99d-053f3f1f4615"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                         0\n",
              "diagnosis                  0\n",
              "radius_mean                0\n",
              "texture_mean               0\n",
              "perimeter_mean             0\n",
              "area_mean                  0\n",
              "smoothness_mean            0\n",
              "compactness_mean           0\n",
              "concavity_mean             0\n",
              "concave points_mean        0\n",
              "symmetry_mean              0\n",
              "fractal_dimension_mean     0\n",
              "radius_se                  0\n",
              "texture_se                 0\n",
              "perimeter_se               0\n",
              "area_se                    0\n",
              "smoothness_se              0\n",
              "compactness_se             0\n",
              "concavity_se               0\n",
              "concave points_se          0\n",
              "symmetry_se                0\n",
              "fractal_dimension_se       0\n",
              "radius_worst               0\n",
              "texture_worst              0\n",
              "perimeter_worst            0\n",
              "area_worst                 0\n",
              "smoothness_worst           0\n",
              "compactness_worst          0\n",
              "concavity_worst            0\n",
              "concave points_worst       0\n",
              "symmetry_worst             0\n",
              "fractal_dimension_worst    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# here there is no missing values\n",
        "x=data['diagnosis'].value_counts()"
      ],
      "metadata": {
        "id": "0LpLWIdaG3fs"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YEaur9XhHMsN",
        "outputId": "c1b38f22-ef1b-4297-fc5f-df3ff5ae13a3"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "B    357\n",
              "M    212\n",
              "Name: diagnosis, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x.plot.bar(xlabel='types',ylabel='count',color=['g','y'],title='diagnosis')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "fzGoCouaHwcR",
        "outputId": "c31efff2-1669-42bc-e99b-d33c25b206a0"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:title={'center':'diagnosis'}, xlabel='types', ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['diagnosis'].replace(to_replace=['M','B'],value=['0','1'],inplace=True)"
      ],
      "metadata": {
        "id": "ZdQbRaUtIKUj"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "pLJXE77jKxPM",
        "outputId": "7369e1b1-791f-41c2-ffb0-1fd084ecd0fb"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "0      842302         0        17.99         10.38          122.80     1001.0   \n",
              "1      842517         0        20.57         17.77          132.90     1326.0   \n",
              "2    84300903         0        19.69         21.25          130.00     1203.0   \n",
              "3    84348301         0        11.42         20.38           77.58      386.1   \n",
              "4    84358402         0        20.29         14.34          135.10     1297.0   \n",
              "..        ...       ...          ...           ...             ...        ...   \n",
              "564    926424         0        21.56         22.39          142.00     1479.0   \n",
              "565    926682         0        20.13         28.25          131.20     1261.0   \n",
              "566    926954         0        16.60         28.08          108.30      858.1   \n",
              "567    927241         0        20.60         29.33          140.10     1265.0   \n",
              "568     92751         1         7.76         24.54           47.92      181.0   \n",
              "\n",
              "     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "0            0.11840           0.27760         0.30010              0.14710   \n",
              "1            0.08474           0.07864         0.08690              0.07017   \n",
              "2            0.10960           0.15990         0.19740              0.12790   \n",
              "3            0.14250           0.28390         0.24140              0.10520   \n",
              "4            0.10030           0.13280         0.19800              0.10430   \n",
              "..               ...               ...             ...                  ...   \n",
              "564          0.11100           0.11590         0.24390              0.13890   \n",
              "565          0.09780           0.10340         0.14400              0.09791   \n",
              "566          0.08455           0.10230         0.09251              0.05302   \n",
              "567          0.11780           0.27700         0.35140              0.15200   \n",
              "568          0.05263           0.04362         0.00000              0.00000   \n",
              "\n",
              "     ...  radius_worst  texture_worst  perimeter_worst  area_worst  \\\n",
              "0    ...        25.380          17.33           184.60      2019.0   \n",
              "1    ...        24.990          23.41           158.80      1956.0   \n",
              "2    ...        23.570          25.53           152.50      1709.0   \n",
              "3    ...        14.910          26.50            98.87       567.7   \n",
              "4    ...        22.540          16.67           152.20      1575.0   \n",
              "..   ...           ...            ...              ...         ...   \n",
              "564  ...        25.450          26.40           166.10      2027.0   \n",
              "565  ...        23.690          38.25           155.00      1731.0   \n",
              "566  ...        18.980          34.12           126.70      1124.0   \n",
              "567  ...        25.740          39.42           184.60      1821.0   \n",
              "568  ...         9.456          30.37            59.16       268.6   \n",
              "\n",
              "     smoothness_worst  compactness_worst  concavity_worst  \\\n",
              "0             0.16220            0.66560           0.7119   \n",
              "1             0.12380            0.18660           0.2416   \n",
              "2             0.14440            0.42450           0.4504   \n",
              "3             0.20980            0.86630           0.6869   \n",
              "4             0.13740            0.20500           0.4000   \n",
              "..                ...                ...              ...   \n",
              "564           0.14100            0.21130           0.4107   \n",
              "565           0.11660            0.19220           0.3215   \n",
              "566           0.11390            0.30940           0.3403   \n",
              "567           0.16500            0.86810           0.9387   \n",
              "568           0.08996            0.06444           0.0000   \n",
              "\n",
              "     concave points_worst  symmetry_worst  fractal_dimension_worst  \n",
              "0                  0.2654          0.4601                  0.11890  \n",
              "1                  0.1860          0.2750                  0.08902  \n",
              "2                  0.2430          0.3613                  0.08758  \n",
              "3                  0.2575          0.6638                  0.17300  \n",
              "4                  0.1625          0.2364                  0.07678  \n",
              "..                    ...             ...                      ...  \n",
              "564                0.2216          0.2060                  0.07115  \n",
              "565                0.1628          0.2572                  0.06637  \n",
              "566                0.1418          0.2218                  0.07820  \n",
              "567                0.2650          0.4087                  0.12400  \n",
              "568                0.0000          0.2871                  0.07039  \n",
              "\n",
              "[569 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c04f2471-300e-40c8-98d9-9caa0613dad2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>842302</td>\n",
              "      <td>0</td>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.30010</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>...</td>\n",
              "      <td>25.380</td>\n",
              "      <td>17.33</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.16220</td>\n",
              "      <td>0.66560</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>842517</td>\n",
              "      <td>0</td>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.08690</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>...</td>\n",
              "      <td>24.990</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.12380</td>\n",
              "      <td>0.18660</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>84300903</td>\n",
              "      <td>0</td>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.19740</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>...</td>\n",
              "      <td>23.570</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.14440</td>\n",
              "      <td>0.42450</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>84348301</td>\n",
              "      <td>0</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.24140</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>...</td>\n",
              "      <td>14.910</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.20980</td>\n",
              "      <td>0.86630</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>84358402</td>\n",
              "      <td>0</td>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.19800</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>...</td>\n",
              "      <td>22.540</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.13740</td>\n",
              "      <td>0.20500</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>926424</td>\n",
              "      <td>0</td>\n",
              "      <td>21.56</td>\n",
              "      <td>22.39</td>\n",
              "      <td>142.00</td>\n",
              "      <td>1479.0</td>\n",
              "      <td>0.11100</td>\n",
              "      <td>0.11590</td>\n",
              "      <td>0.24390</td>\n",
              "      <td>0.13890</td>\n",
              "      <td>...</td>\n",
              "      <td>25.450</td>\n",
              "      <td>26.40</td>\n",
              "      <td>166.10</td>\n",
              "      <td>2027.0</td>\n",
              "      <td>0.14100</td>\n",
              "      <td>0.21130</td>\n",
              "      <td>0.4107</td>\n",
              "      <td>0.2216</td>\n",
              "      <td>0.2060</td>\n",
              "      <td>0.07115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>926682</td>\n",
              "      <td>0</td>\n",
              "      <td>20.13</td>\n",
              "      <td>28.25</td>\n",
              "      <td>131.20</td>\n",
              "      <td>1261.0</td>\n",
              "      <td>0.09780</td>\n",
              "      <td>0.10340</td>\n",
              "      <td>0.14400</td>\n",
              "      <td>0.09791</td>\n",
              "      <td>...</td>\n",
              "      <td>23.690</td>\n",
              "      <td>38.25</td>\n",
              "      <td>155.00</td>\n",
              "      <td>1731.0</td>\n",
              "      <td>0.11660</td>\n",
              "      <td>0.19220</td>\n",
              "      <td>0.3215</td>\n",
              "      <td>0.1628</td>\n",
              "      <td>0.2572</td>\n",
              "      <td>0.06637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>566</th>\n",
              "      <td>926954</td>\n",
              "      <td>0</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.08</td>\n",
              "      <td>108.30</td>\n",
              "      <td>858.1</td>\n",
              "      <td>0.08455</td>\n",
              "      <td>0.10230</td>\n",
              "      <td>0.09251</td>\n",
              "      <td>0.05302</td>\n",
              "      <td>...</td>\n",
              "      <td>18.980</td>\n",
              "      <td>34.12</td>\n",
              "      <td>126.70</td>\n",
              "      <td>1124.0</td>\n",
              "      <td>0.11390</td>\n",
              "      <td>0.30940</td>\n",
              "      <td>0.3403</td>\n",
              "      <td>0.1418</td>\n",
              "      <td>0.2218</td>\n",
              "      <td>0.07820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>567</th>\n",
              "      <td>927241</td>\n",
              "      <td>0</td>\n",
              "      <td>20.60</td>\n",
              "      <td>29.33</td>\n",
              "      <td>140.10</td>\n",
              "      <td>1265.0</td>\n",
              "      <td>0.11780</td>\n",
              "      <td>0.27700</td>\n",
              "      <td>0.35140</td>\n",
              "      <td>0.15200</td>\n",
              "      <td>...</td>\n",
              "      <td>25.740</td>\n",
              "      <td>39.42</td>\n",
              "      <td>184.60</td>\n",
              "      <td>1821.0</td>\n",
              "      <td>0.16500</td>\n",
              "      <td>0.86810</td>\n",
              "      <td>0.9387</td>\n",
              "      <td>0.2650</td>\n",
              "      <td>0.4087</td>\n",
              "      <td>0.12400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>92751</td>\n",
              "      <td>1</td>\n",
              "      <td>7.76</td>\n",
              "      <td>24.54</td>\n",
              "      <td>47.92</td>\n",
              "      <td>181.0</td>\n",
              "      <td>0.05263</td>\n",
              "      <td>0.04362</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>...</td>\n",
              "      <td>9.456</td>\n",
              "      <td>30.37</td>\n",
              "      <td>59.16</td>\n",
              "      <td>268.6</td>\n",
              "      <td>0.08996</td>\n",
              "      <td>0.06444</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.2871</td>\n",
              "      <td>0.07039</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>569 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c04f2471-300e-40c8-98d9-9caa0613dad2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c04f2471-300e-40c8-98d9-9caa0613dad2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c04f2471-300e-40c8-98d9-9caa0613dad2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.plot.scatter(x='radius_mean',y='perimeter_mean')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "1FpILKxAMb67",
        "outputId": "7c4e3092-8741-4630-9192-48b4afa2cc6a"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='radius_mean', ylabel='perimeter_mean'>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=data.iloc[:,2:6]"
      ],
      "metadata": {
        "id": "LHH-HswlNANk"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.drop(columns='texture_mean',inplace=True)\n",
        "pd.plotting.scatter_matrix(x,alpha=0.4)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 463
        },
        "id": "0b9mMxSkPRfb",
        "outputId": "376da2f7-2fe0-4aed-a47a-a7e2676391cb"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<AxesSubplot:xlabel='radius_mean', ylabel='radius_mean'>,\n",
              "        <AxesSubplot:xlabel='perimeter_mean', ylabel='radius_mean'>,\n",
              "        <AxesSubplot:xlabel='area_mean', ylabel='radius_mean'>],\n",
              "       [<AxesSubplot:xlabel='radius_mean', ylabel='perimeter_mean'>,\n",
              "        <AxesSubplot:xlabel='perimeter_mean', ylabel='perimeter_mean'>,\n",
              "        <AxesSubplot:xlabel='area_mean', ylabel='perimeter_mean'>],\n",
              "       [<AxesSubplot:xlabel='radius_mean', ylabel='area_mean'>,\n",
              "        <AxesSubplot:xlabel='perimeter_mean', ylabel='area_mean'>,\n",
              "        <AxesSubplot:xlabel='area_mean', ylabel='area_mean'>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 9 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "w7OpUJggSXxO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "lGXfCBr-SGNI",
        "outputId": "ba007a56-4b9d-48a0-9c69-06dcc219399a"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "0      842302         0        17.99         10.38          122.80     1001.0   \n",
              "1      842517         0        20.57         17.77          132.90     1326.0   \n",
              "2    84300903         0        19.69         21.25          130.00     1203.0   \n",
              "3    84348301         0        11.42         20.38           77.58      386.1   \n",
              "4    84358402         0        20.29         14.34          135.10     1297.0   \n",
              "..        ...       ...          ...           ...             ...        ...   \n",
              "564    926424         0        21.56         22.39          142.00     1479.0   \n",
              "565    926682         0        20.13         28.25          131.20     1261.0   \n",
              "566    926954         0        16.60         28.08          108.30      858.1   \n",
              "567    927241         0        20.60         29.33          140.10     1265.0   \n",
              "568     92751         1         7.76         24.54           47.92      181.0   \n",
              "\n",
              "     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "0            0.11840           0.27760         0.30010              0.14710   \n",
              "1            0.08474           0.07864         0.08690              0.07017   \n",
              "2            0.10960           0.15990         0.19740              0.12790   \n",
              "3            0.14250           0.28390         0.24140              0.10520   \n",
              "4            0.10030           0.13280         0.19800              0.10430   \n",
              "..               ...               ...             ...                  ...   \n",
              "564          0.11100           0.11590         0.24390              0.13890   \n",
              "565          0.09780           0.10340         0.14400              0.09791   \n",
              "566          0.08455           0.10230         0.09251              0.05302   \n",
              "567          0.11780           0.27700         0.35140              0.15200   \n",
              "568          0.05263           0.04362         0.00000              0.00000   \n",
              "\n",
              "     ...  radius_worst  texture_worst  perimeter_worst  area_worst  \\\n",
              "0    ...        25.380          17.33           184.60      2019.0   \n",
              "1    ...        24.990          23.41           158.80      1956.0   \n",
              "2    ...        23.570          25.53           152.50      1709.0   \n",
              "3    ...        14.910          26.50            98.87       567.7   \n",
              "4    ...        22.540          16.67           152.20      1575.0   \n",
              "..   ...           ...            ...              ...         ...   \n",
              "564  ...        25.450          26.40           166.10      2027.0   \n",
              "565  ...        23.690          38.25           155.00      1731.0   \n",
              "566  ...        18.980          34.12           126.70      1124.0   \n",
              "567  ...        25.740          39.42           184.60      1821.0   \n",
              "568  ...         9.456          30.37            59.16       268.6   \n",
              "\n",
              "     smoothness_worst  compactness_worst  concavity_worst  \\\n",
              "0             0.16220            0.66560           0.7119   \n",
              "1             0.12380            0.18660           0.2416   \n",
              "2             0.14440            0.42450           0.4504   \n",
              "3             0.20980            0.86630           0.6869   \n",
              "4             0.13740            0.20500           0.4000   \n",
              "..                ...                ...              ...   \n",
              "564           0.14100            0.21130           0.4107   \n",
              "565           0.11660            0.19220           0.3215   \n",
              "566           0.11390            0.30940           0.3403   \n",
              "567           0.16500            0.86810           0.9387   \n",
              "568           0.08996            0.06444           0.0000   \n",
              "\n",
              "     concave points_worst  symmetry_worst  fractal_dimension_worst  \n",
              "0                  0.2654          0.4601                  0.11890  \n",
              "1                  0.1860          0.2750                  0.08902  \n",
              "2                  0.2430          0.3613                  0.08758  \n",
              "3                  0.2575          0.6638                  0.17300  \n",
              "4                  0.1625          0.2364                  0.07678  \n",
              "..                    ...             ...                      ...  \n",
              "564                0.2216          0.2060                  0.07115  \n",
              "565                0.1628          0.2572                  0.06637  \n",
              "566                0.1418          0.2218                  0.07820  \n",
              "567                0.2650          0.4087                  0.12400  \n",
              "568                0.0000          0.2871                  0.07039  \n",
              "\n",
              "[569 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-571c84bf-9023-4f68-af19-5784cb824b5f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>842302</td>\n",
              "      <td>0</td>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.30010</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>...</td>\n",
              "      <td>25.380</td>\n",
              "      <td>17.33</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.16220</td>\n",
              "      <td>0.66560</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>842517</td>\n",
              "      <td>0</td>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.08690</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>...</td>\n",
              "      <td>24.990</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.12380</td>\n",
              "      <td>0.18660</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>84300903</td>\n",
              "      <td>0</td>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.19740</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>...</td>\n",
              "      <td>23.570</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.14440</td>\n",
              "      <td>0.42450</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>84348301</td>\n",
              "      <td>0</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.24140</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>...</td>\n",
              "      <td>14.910</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.20980</td>\n",
              "      <td>0.86630</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>84358402</td>\n",
              "      <td>0</td>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.19800</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>...</td>\n",
              "      <td>22.540</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.13740</td>\n",
              "      <td>0.20500</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>926424</td>\n",
              "      <td>0</td>\n",
              "      <td>21.56</td>\n",
              "      <td>22.39</td>\n",
              "      <td>142.00</td>\n",
              "      <td>1479.0</td>\n",
              "      <td>0.11100</td>\n",
              "      <td>0.11590</td>\n",
              "      <td>0.24390</td>\n",
              "      <td>0.13890</td>\n",
              "      <td>...</td>\n",
              "      <td>25.450</td>\n",
              "      <td>26.40</td>\n",
              "      <td>166.10</td>\n",
              "      <td>2027.0</td>\n",
              "      <td>0.14100</td>\n",
              "      <td>0.21130</td>\n",
              "      <td>0.4107</td>\n",
              "      <td>0.2216</td>\n",
              "      <td>0.2060</td>\n",
              "      <td>0.07115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>926682</td>\n",
              "      <td>0</td>\n",
              "      <td>20.13</td>\n",
              "      <td>28.25</td>\n",
              "      <td>131.20</td>\n",
              "      <td>1261.0</td>\n",
              "      <td>0.09780</td>\n",
              "      <td>0.10340</td>\n",
              "      <td>0.14400</td>\n",
              "      <td>0.09791</td>\n",
              "      <td>...</td>\n",
              "      <td>23.690</td>\n",
              "      <td>38.25</td>\n",
              "      <td>155.00</td>\n",
              "      <td>1731.0</td>\n",
              "      <td>0.11660</td>\n",
              "      <td>0.19220</td>\n",
              "      <td>0.3215</td>\n",
              "      <td>0.1628</td>\n",
              "      <td>0.2572</td>\n",
              "      <td>0.06637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>566</th>\n",
              "      <td>926954</td>\n",
              "      <td>0</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.08</td>\n",
              "      <td>108.30</td>\n",
              "      <td>858.1</td>\n",
              "      <td>0.08455</td>\n",
              "      <td>0.10230</td>\n",
              "      <td>0.09251</td>\n",
              "      <td>0.05302</td>\n",
              "      <td>...</td>\n",
              "      <td>18.980</td>\n",
              "      <td>34.12</td>\n",
              "      <td>126.70</td>\n",
              "      <td>1124.0</td>\n",
              "      <td>0.11390</td>\n",
              "      <td>0.30940</td>\n",
              "      <td>0.3403</td>\n",
              "      <td>0.1418</td>\n",
              "      <td>0.2218</td>\n",
              "      <td>0.07820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>567</th>\n",
              "      <td>927241</td>\n",
              "      <td>0</td>\n",
              "      <td>20.60</td>\n",
              "      <td>29.33</td>\n",
              "      <td>140.10</td>\n",
              "      <td>1265.0</td>\n",
              "      <td>0.11780</td>\n",
              "      <td>0.27700</td>\n",
              "      <td>0.35140</td>\n",
              "      <td>0.15200</td>\n",
              "      <td>...</td>\n",
              "      <td>25.740</td>\n",
              "      <td>39.42</td>\n",
              "      <td>184.60</td>\n",
              "      <td>1821.0</td>\n",
              "      <td>0.16500</td>\n",
              "      <td>0.86810</td>\n",
              "      <td>0.9387</td>\n",
              "      <td>0.2650</td>\n",
              "      <td>0.4087</td>\n",
              "      <td>0.12400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>92751</td>\n",
              "      <td>1</td>\n",
              "      <td>7.76</td>\n",
              "      <td>24.54</td>\n",
              "      <td>47.92</td>\n",
              "      <td>181.0</td>\n",
              "      <td>0.05263</td>\n",
              "      <td>0.04362</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>...</td>\n",
              "      <td>9.456</td>\n",
              "      <td>30.37</td>\n",
              "      <td>59.16</td>\n",
              "      <td>268.6</td>\n",
              "      <td>0.08996</td>\n",
              "      <td>0.06444</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.2871</td>\n",
              "      <td>0.07039</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>569 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-571c84bf-9023-4f68-af19-5784cb824b5f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-571c84bf-9023-4f68-af19-5784cb824b5f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-571c84bf-9023-4f68-af19-5784cb824b5f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=data.drop(columns='diagnosis')"
      ],
      "metadata": {
        "id": "rlGXCG5sPjlm"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "vkQck7mhaTw6",
        "outputId": "c2705b39-1985-4927-d47d-f51ea9eea109"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           id  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "0      842302        17.99         10.38          122.80     1001.0   \n",
              "1      842517        20.57         17.77          132.90     1326.0   \n",
              "2    84300903        19.69         21.25          130.00     1203.0   \n",
              "3    84348301        11.42         20.38           77.58      386.1   \n",
              "4    84358402        20.29         14.34          135.10     1297.0   \n",
              "..        ...          ...           ...             ...        ...   \n",
              "564    926424        21.56         22.39          142.00     1479.0   \n",
              "565    926682        20.13         28.25          131.20     1261.0   \n",
              "566    926954        16.60         28.08          108.30      858.1   \n",
              "567    927241        20.60         29.33          140.10     1265.0   \n",
              "568     92751         7.76         24.54           47.92      181.0   \n",
              "\n",
              "     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "0            0.11840           0.27760         0.30010              0.14710   \n",
              "1            0.08474           0.07864         0.08690              0.07017   \n",
              "2            0.10960           0.15990         0.19740              0.12790   \n",
              "3            0.14250           0.28390         0.24140              0.10520   \n",
              "4            0.10030           0.13280         0.19800              0.10430   \n",
              "..               ...               ...             ...                  ...   \n",
              "564          0.11100           0.11590         0.24390              0.13890   \n",
              "565          0.09780           0.10340         0.14400              0.09791   \n",
              "566          0.08455           0.10230         0.09251              0.05302   \n",
              "567          0.11780           0.27700         0.35140              0.15200   \n",
              "568          0.05263           0.04362         0.00000              0.00000   \n",
              "\n",
              "     symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n",
              "0           0.2419  ...        25.380          17.33           184.60   \n",
              "1           0.1812  ...        24.990          23.41           158.80   \n",
              "2           0.2069  ...        23.570          25.53           152.50   \n",
              "3           0.2597  ...        14.910          26.50            98.87   \n",
              "4           0.1809  ...        22.540          16.67           152.20   \n",
              "..             ...  ...           ...            ...              ...   \n",
              "564         0.1726  ...        25.450          26.40           166.10   \n",
              "565         0.1752  ...        23.690          38.25           155.00   \n",
              "566         0.1590  ...        18.980          34.12           126.70   \n",
              "567         0.2397  ...        25.740          39.42           184.60   \n",
              "568         0.1587  ...         9.456          30.37            59.16   \n",
              "\n",
              "     area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n",
              "0        2019.0           0.16220            0.66560           0.7119   \n",
              "1        1956.0           0.12380            0.18660           0.2416   \n",
              "2        1709.0           0.14440            0.42450           0.4504   \n",
              "3         567.7           0.20980            0.86630           0.6869   \n",
              "4        1575.0           0.13740            0.20500           0.4000   \n",
              "..          ...               ...                ...              ...   \n",
              "564      2027.0           0.14100            0.21130           0.4107   \n",
              "565      1731.0           0.11660            0.19220           0.3215   \n",
              "566      1124.0           0.11390            0.30940           0.3403   \n",
              "567      1821.0           0.16500            0.86810           0.9387   \n",
              "568       268.6           0.08996            0.06444           0.0000   \n",
              "\n",
              "     concave points_worst  symmetry_worst  fractal_dimension_worst  \n",
              "0                  0.2654          0.4601                  0.11890  \n",
              "1                  0.1860          0.2750                  0.08902  \n",
              "2                  0.2430          0.3613                  0.08758  \n",
              "3                  0.2575          0.6638                  0.17300  \n",
              "4                  0.1625          0.2364                  0.07678  \n",
              "..                    ...             ...                      ...  \n",
              "564                0.2216          0.2060                  0.07115  \n",
              "565                0.1628          0.2572                  0.06637  \n",
              "566                0.1418          0.2218                  0.07820  \n",
              "567                0.2650          0.4087                  0.12400  \n",
              "568                0.0000          0.2871                  0.07039  \n",
              "\n",
              "[569 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ac0f6746-538c-4008-bc3c-b57ecff5dd9b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>symmetry_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>842302</td>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.30010</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>0.2419</td>\n",
              "      <td>...</td>\n",
              "      <td>25.380</td>\n",
              "      <td>17.33</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.16220</td>\n",
              "      <td>0.66560</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>842517</td>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.08690</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>0.1812</td>\n",
              "      <td>...</td>\n",
              "      <td>24.990</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.12380</td>\n",
              "      <td>0.18660</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>84300903</td>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.19740</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>0.2069</td>\n",
              "      <td>...</td>\n",
              "      <td>23.570</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.14440</td>\n",
              "      <td>0.42450</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>84348301</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.24140</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>0.2597</td>\n",
              "      <td>...</td>\n",
              "      <td>14.910</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.20980</td>\n",
              "      <td>0.86630</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>84358402</td>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.19800</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>0.1809</td>\n",
              "      <td>...</td>\n",
              "      <td>22.540</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.13740</td>\n",
              "      <td>0.20500</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>926424</td>\n",
              "      <td>21.56</td>\n",
              "      <td>22.39</td>\n",
              "      <td>142.00</td>\n",
              "      <td>1479.0</td>\n",
              "      <td>0.11100</td>\n",
              "      <td>0.11590</td>\n",
              "      <td>0.24390</td>\n",
              "      <td>0.13890</td>\n",
              "      <td>0.1726</td>\n",
              "      <td>...</td>\n",
              "      <td>25.450</td>\n",
              "      <td>26.40</td>\n",
              "      <td>166.10</td>\n",
              "      <td>2027.0</td>\n",
              "      <td>0.14100</td>\n",
              "      <td>0.21130</td>\n",
              "      <td>0.4107</td>\n",
              "      <td>0.2216</td>\n",
              "      <td>0.2060</td>\n",
              "      <td>0.07115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>926682</td>\n",
              "      <td>20.13</td>\n",
              "      <td>28.25</td>\n",
              "      <td>131.20</td>\n",
              "      <td>1261.0</td>\n",
              "      <td>0.09780</td>\n",
              "      <td>0.10340</td>\n",
              "      <td>0.14400</td>\n",
              "      <td>0.09791</td>\n",
              "      <td>0.1752</td>\n",
              "      <td>...</td>\n",
              "      <td>23.690</td>\n",
              "      <td>38.25</td>\n",
              "      <td>155.00</td>\n",
              "      <td>1731.0</td>\n",
              "      <td>0.11660</td>\n",
              "      <td>0.19220</td>\n",
              "      <td>0.3215</td>\n",
              "      <td>0.1628</td>\n",
              "      <td>0.2572</td>\n",
              "      <td>0.06637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>566</th>\n",
              "      <td>926954</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.08</td>\n",
              "      <td>108.30</td>\n",
              "      <td>858.1</td>\n",
              "      <td>0.08455</td>\n",
              "      <td>0.10230</td>\n",
              "      <td>0.09251</td>\n",
              "      <td>0.05302</td>\n",
              "      <td>0.1590</td>\n",
              "      <td>...</td>\n",
              "      <td>18.980</td>\n",
              "      <td>34.12</td>\n",
              "      <td>126.70</td>\n",
              "      <td>1124.0</td>\n",
              "      <td>0.11390</td>\n",
              "      <td>0.30940</td>\n",
              "      <td>0.3403</td>\n",
              "      <td>0.1418</td>\n",
              "      <td>0.2218</td>\n",
              "      <td>0.07820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>567</th>\n",
              "      <td>927241</td>\n",
              "      <td>20.60</td>\n",
              "      <td>29.33</td>\n",
              "      <td>140.10</td>\n",
              "      <td>1265.0</td>\n",
              "      <td>0.11780</td>\n",
              "      <td>0.27700</td>\n",
              "      <td>0.35140</td>\n",
              "      <td>0.15200</td>\n",
              "      <td>0.2397</td>\n",
              "      <td>...</td>\n",
              "      <td>25.740</td>\n",
              "      <td>39.42</td>\n",
              "      <td>184.60</td>\n",
              "      <td>1821.0</td>\n",
              "      <td>0.16500</td>\n",
              "      <td>0.86810</td>\n",
              "      <td>0.9387</td>\n",
              "      <td>0.2650</td>\n",
              "      <td>0.4087</td>\n",
              "      <td>0.12400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>92751</td>\n",
              "      <td>7.76</td>\n",
              "      <td>24.54</td>\n",
              "      <td>47.92</td>\n",
              "      <td>181.0</td>\n",
              "      <td>0.05263</td>\n",
              "      <td>0.04362</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.1587</td>\n",
              "      <td>...</td>\n",
              "      <td>9.456</td>\n",
              "      <td>30.37</td>\n",
              "      <td>59.16</td>\n",
              "      <td>268.6</td>\n",
              "      <td>0.08996</td>\n",
              "      <td>0.06444</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.2871</td>\n",
              "      <td>0.07039</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>569 rows × 31 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac0f6746-538c-4008-bc3c-b57ecff5dd9b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ac0f6746-538c-4008-bc3c-b57ecff5dd9b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ac0f6746-538c-4008-bc3c-b57ecff5dd9b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=data.iloc[:,1]"
      ],
      "metadata": {
        "id": "23BYYgwxSjzU"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x)\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nF-LagEiSpaz",
        "outputId": "1693d4ea-81b3-4164-8d6c-2adf1a7c31d1"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "           id  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
            "0      842302        17.99         10.38          122.80     1001.0   \n",
            "1      842517        20.57         17.77          132.90     1326.0   \n",
            "2    84300903        19.69         21.25          130.00     1203.0   \n",
            "3    84348301        11.42         20.38           77.58      386.1   \n",
            "4    84358402        20.29         14.34          135.10     1297.0   \n",
            "..        ...          ...           ...             ...        ...   \n",
            "564    926424        21.56         22.39          142.00     1479.0   \n",
            "565    926682        20.13         28.25          131.20     1261.0   \n",
            "566    926954        16.60         28.08          108.30      858.1   \n",
            "567    927241        20.60         29.33          140.10     1265.0   \n",
            "568     92751         7.76         24.54           47.92      181.0   \n",
            "\n",
            "     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
            "0            0.11840           0.27760         0.30010              0.14710   \n",
            "1            0.08474           0.07864         0.08690              0.07017   \n",
            "2            0.10960           0.15990         0.19740              0.12790   \n",
            "3            0.14250           0.28390         0.24140              0.10520   \n",
            "4            0.10030           0.13280         0.19800              0.10430   \n",
            "..               ...               ...             ...                  ...   \n",
            "564          0.11100           0.11590         0.24390              0.13890   \n",
            "565          0.09780           0.10340         0.14400              0.09791   \n",
            "566          0.08455           0.10230         0.09251              0.05302   \n",
            "567          0.11780           0.27700         0.35140              0.15200   \n",
            "568          0.05263           0.04362         0.00000              0.00000   \n",
            "\n",
            "     symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n",
            "0           0.2419  ...        25.380          17.33           184.60   \n",
            "1           0.1812  ...        24.990          23.41           158.80   \n",
            "2           0.2069  ...        23.570          25.53           152.50   \n",
            "3           0.2597  ...        14.910          26.50            98.87   \n",
            "4           0.1809  ...        22.540          16.67           152.20   \n",
            "..             ...  ...           ...            ...              ...   \n",
            "564         0.1726  ...        25.450          26.40           166.10   \n",
            "565         0.1752  ...        23.690          38.25           155.00   \n",
            "566         0.1590  ...        18.980          34.12           126.70   \n",
            "567         0.2397  ...        25.740          39.42           184.60   \n",
            "568         0.1587  ...         9.456          30.37            59.16   \n",
            "\n",
            "     area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n",
            "0        2019.0           0.16220            0.66560           0.7119   \n",
            "1        1956.0           0.12380            0.18660           0.2416   \n",
            "2        1709.0           0.14440            0.42450           0.4504   \n",
            "3         567.7           0.20980            0.86630           0.6869   \n",
            "4        1575.0           0.13740            0.20500           0.4000   \n",
            "..          ...               ...                ...              ...   \n",
            "564      2027.0           0.14100            0.21130           0.4107   \n",
            "565      1731.0           0.11660            0.19220           0.3215   \n",
            "566      1124.0           0.11390            0.30940           0.3403   \n",
            "567      1821.0           0.16500            0.86810           0.9387   \n",
            "568       268.6           0.08996            0.06444           0.0000   \n",
            "\n",
            "     concave points_worst  symmetry_worst  fractal_dimension_worst  \n",
            "0                  0.2654          0.4601                  0.11890  \n",
            "1                  0.1860          0.2750                  0.08902  \n",
            "2                  0.2430          0.3613                  0.08758  \n",
            "3                  0.2575          0.6638                  0.17300  \n",
            "4                  0.1625          0.2364                  0.07678  \n",
            "..                    ...             ...                      ...  \n",
            "564                0.2216          0.2060                  0.07115  \n",
            "565                0.1628          0.2572                  0.06637  \n",
            "566                0.1418          0.2218                  0.07820  \n",
            "567                0.2650          0.4087                  0.12400  \n",
            "568                0.0000          0.2871                  0.07039  \n",
            "\n",
            "[569 rows x 31 columns]\n",
            "0      0\n",
            "1      0\n",
            "2      0\n",
            "3      0\n",
            "4      0\n",
            "      ..\n",
            "564    0\n",
            "565    0\n",
            "566    0\n",
            "567    0\n",
            "568    1\n",
            "Name: diagnosis, Length: 569, dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_tr,x_test,y_tr,y_test=train_test_split(x,y,test_size=0.2,random_state=3)"
      ],
      "metadata": {
        "id": "OOFGtCenZVEc"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_tr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "TTAlMPrub6WK",
        "outputId": "aa9faa14-8943-4f58-a7ae-233aa1ac1122"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           id  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "280   8912049        19.16         26.60          126.20     1138.0   \n",
              "186    874217        18.31         18.58          118.60     1041.0   \n",
              "437    909220        14.04         15.98           89.78      611.2   \n",
              "329    895633        16.26         21.88          107.50      826.8   \n",
              "201    877989        17.54         19.32          115.10      951.6   \n",
              "..        ...          ...           ...             ...        ...   \n",
              "480    912193        12.16         18.03           78.29      455.3   \n",
              "422    906616        11.61         16.02           75.46      408.2   \n",
              "119    865128        17.95         20.01          114.20      982.0   \n",
              "256  88649001        19.55         28.77          133.60     1207.0   \n",
              "249    884689        11.52         14.93           73.87      406.3   \n",
              "\n",
              "     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "280          0.10200           0.14530         0.19210              0.09664   \n",
              "186          0.08588           0.08468         0.08169              0.05814   \n",
              "437          0.08458           0.05895         0.03534              0.02944   \n",
              "329          0.11650           0.12830         0.17990              0.07981   \n",
              "201          0.08968           0.11980         0.10360              0.07488   \n",
              "..               ...               ...             ...                  ...   \n",
              "480          0.09087           0.07838         0.02916              0.01527   \n",
              "422          0.10880           0.11680         0.07097              0.04497   \n",
              "119          0.08402           0.06722         0.07293              0.05596   \n",
              "256          0.09260           0.20630         0.17840              0.11440   \n",
              "249          0.10130           0.07808         0.04328              0.02929   \n",
              "\n",
              "     symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n",
              "280         0.1902  ...         23.72          35.90           159.80   \n",
              "186         0.1621  ...         21.31          26.36           139.20   \n",
              "437         0.1714  ...         15.66          21.58           101.20   \n",
              "329         0.1869  ...         17.73          25.21           113.70   \n",
              "201         0.1506  ...         20.42          25.84           139.50   \n",
              "..             ...  ...           ...            ...              ...   \n",
              "480         0.1464  ...         13.34          27.87            88.83   \n",
              "422         0.1886  ...         12.64          19.67            81.93   \n",
              "119         0.2129  ...         20.58          27.83           129.20   \n",
              "256         0.1893  ...         25.05          36.27           178.60   \n",
              "249         0.1883  ...         12.65          21.19            80.88   \n",
              "\n",
              "     area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n",
              "280      1724.0            0.1782             0.3841           0.5754   \n",
              "186      1410.0            0.1234             0.2445           0.3538   \n",
              "437       750.0            0.1195             0.1252           0.1117   \n",
              "329       975.2            0.1426             0.2116           0.3344   \n",
              "201      1239.0            0.1381             0.3420           0.3508   \n",
              "..          ...               ...                ...              ...   \n",
              "480       547.4            0.1208             0.2279           0.1620   \n",
              "422       475.7            0.1415             0.2170           0.2302   \n",
              "119      1261.0            0.1072             0.1202           0.2249   \n",
              "256      1926.0            0.1281             0.5329           0.4251   \n",
              "249       491.8            0.1389             0.1582           0.1804   \n",
              "\n",
              "     concave points_worst  symmetry_worst  fractal_dimension_worst  \n",
              "280               0.18720          0.3258                  0.09720  \n",
              "186               0.15710          0.3206                  0.06938  \n",
              "437               0.07453          0.2725                  0.07234  \n",
              "329               0.10470          0.2736                  0.07953  \n",
              "201               0.19390          0.2928                  0.07867  \n",
              "..                    ...             ...                      ...  \n",
              "480               0.05690          0.2406                  0.07729  \n",
              "422               0.11050          0.2787                  0.07427  \n",
              "119               0.11850          0.4882                  0.06111  \n",
              "256               0.19410          0.2818                  0.10050  \n",
              "249               0.09608          0.2664                  0.07809  \n",
              "\n",
              "[455 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-36e96d8a-920e-4758-bdfa-41f3292ac28d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>symmetry_mean</th>\n",
              "      <th>...</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>280</th>\n",
              "      <td>8912049</td>\n",
              "      <td>19.16</td>\n",
              "      <td>26.60</td>\n",
              "      <td>126.20</td>\n",
              "      <td>1138.0</td>\n",
              "      <td>0.10200</td>\n",
              "      <td>0.14530</td>\n",
              "      <td>0.19210</td>\n",
              "      <td>0.09664</td>\n",
              "      <td>0.1902</td>\n",
              "      <td>...</td>\n",
              "      <td>23.72</td>\n",
              "      <td>35.90</td>\n",
              "      <td>159.80</td>\n",
              "      <td>1724.0</td>\n",
              "      <td>0.1782</td>\n",
              "      <td>0.3841</td>\n",
              "      <td>0.5754</td>\n",
              "      <td>0.18720</td>\n",
              "      <td>0.3258</td>\n",
              "      <td>0.09720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>874217</td>\n",
              "      <td>18.31</td>\n",
              "      <td>18.58</td>\n",
              "      <td>118.60</td>\n",
              "      <td>1041.0</td>\n",
              "      <td>0.08588</td>\n",
              "      <td>0.08468</td>\n",
              "      <td>0.08169</td>\n",
              "      <td>0.05814</td>\n",
              "      <td>0.1621</td>\n",
              "      <td>...</td>\n",
              "      <td>21.31</td>\n",
              "      <td>26.36</td>\n",
              "      <td>139.20</td>\n",
              "      <td>1410.0</td>\n",
              "      <td>0.1234</td>\n",
              "      <td>0.2445</td>\n",
              "      <td>0.3538</td>\n",
              "      <td>0.15710</td>\n",
              "      <td>0.3206</td>\n",
              "      <td>0.06938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>909220</td>\n",
              "      <td>14.04</td>\n",
              "      <td>15.98</td>\n",
              "      <td>89.78</td>\n",
              "      <td>611.2</td>\n",
              "      <td>0.08458</td>\n",
              "      <td>0.05895</td>\n",
              "      <td>0.03534</td>\n",
              "      <td>0.02944</td>\n",
              "      <td>0.1714</td>\n",
              "      <td>...</td>\n",
              "      <td>15.66</td>\n",
              "      <td>21.58</td>\n",
              "      <td>101.20</td>\n",
              "      <td>750.0</td>\n",
              "      <td>0.1195</td>\n",
              "      <td>0.1252</td>\n",
              "      <td>0.1117</td>\n",
              "      <td>0.07453</td>\n",
              "      <td>0.2725</td>\n",
              "      <td>0.07234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>895633</td>\n",
              "      <td>16.26</td>\n",
              "      <td>21.88</td>\n",
              "      <td>107.50</td>\n",
              "      <td>826.8</td>\n",
              "      <td>0.11650</td>\n",
              "      <td>0.12830</td>\n",
              "      <td>0.17990</td>\n",
              "      <td>0.07981</td>\n",
              "      <td>0.1869</td>\n",
              "      <td>...</td>\n",
              "      <td>17.73</td>\n",
              "      <td>25.21</td>\n",
              "      <td>113.70</td>\n",
              "      <td>975.2</td>\n",
              "      <td>0.1426</td>\n",
              "      <td>0.2116</td>\n",
              "      <td>0.3344</td>\n",
              "      <td>0.10470</td>\n",
              "      <td>0.2736</td>\n",
              "      <td>0.07953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>877989</td>\n",
              "      <td>17.54</td>\n",
              "      <td>19.32</td>\n",
              "      <td>115.10</td>\n",
              "      <td>951.6</td>\n",
              "      <td>0.08968</td>\n",
              "      <td>0.11980</td>\n",
              "      <td>0.10360</td>\n",
              "      <td>0.07488</td>\n",
              "      <td>0.1506</td>\n",
              "      <td>...</td>\n",
              "      <td>20.42</td>\n",
              "      <td>25.84</td>\n",
              "      <td>139.50</td>\n",
              "      <td>1239.0</td>\n",
              "      <td>0.1381</td>\n",
              "      <td>0.3420</td>\n",
              "      <td>0.3508</td>\n",
              "      <td>0.19390</td>\n",
              "      <td>0.2928</td>\n",
              "      <td>0.07867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>912193</td>\n",
              "      <td>12.16</td>\n",
              "      <td>18.03</td>\n",
              "      <td>78.29</td>\n",
              "      <td>455.3</td>\n",
              "      <td>0.09087</td>\n",
              "      <td>0.07838</td>\n",
              "      <td>0.02916</td>\n",
              "      <td>0.01527</td>\n",
              "      <td>0.1464</td>\n",
              "      <td>...</td>\n",
              "      <td>13.34</td>\n",
              "      <td>27.87</td>\n",
              "      <td>88.83</td>\n",
              "      <td>547.4</td>\n",
              "      <td>0.1208</td>\n",
              "      <td>0.2279</td>\n",
              "      <td>0.1620</td>\n",
              "      <td>0.05690</td>\n",
              "      <td>0.2406</td>\n",
              "      <td>0.07729</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>906616</td>\n",
              "      <td>11.61</td>\n",
              "      <td>16.02</td>\n",
              "      <td>75.46</td>\n",
              "      <td>408.2</td>\n",
              "      <td>0.10880</td>\n",
              "      <td>0.11680</td>\n",
              "      <td>0.07097</td>\n",
              "      <td>0.04497</td>\n",
              "      <td>0.1886</td>\n",
              "      <td>...</td>\n",
              "      <td>12.64</td>\n",
              "      <td>19.67</td>\n",
              "      <td>81.93</td>\n",
              "      <td>475.7</td>\n",
              "      <td>0.1415</td>\n",
              "      <td>0.2170</td>\n",
              "      <td>0.2302</td>\n",
              "      <td>0.11050</td>\n",
              "      <td>0.2787</td>\n",
              "      <td>0.07427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>865128</td>\n",
              "      <td>17.95</td>\n",
              "      <td>20.01</td>\n",
              "      <td>114.20</td>\n",
              "      <td>982.0</td>\n",
              "      <td>0.08402</td>\n",
              "      <td>0.06722</td>\n",
              "      <td>0.07293</td>\n",
              "      <td>0.05596</td>\n",
              "      <td>0.2129</td>\n",
              "      <td>...</td>\n",
              "      <td>20.58</td>\n",
              "      <td>27.83</td>\n",
              "      <td>129.20</td>\n",
              "      <td>1261.0</td>\n",
              "      <td>0.1072</td>\n",
              "      <td>0.1202</td>\n",
              "      <td>0.2249</td>\n",
              "      <td>0.11850</td>\n",
              "      <td>0.4882</td>\n",
              "      <td>0.06111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>256</th>\n",
              "      <td>88649001</td>\n",
              "      <td>19.55</td>\n",
              "      <td>28.77</td>\n",
              "      <td>133.60</td>\n",
              "      <td>1207.0</td>\n",
              "      <td>0.09260</td>\n",
              "      <td>0.20630</td>\n",
              "      <td>0.17840</td>\n",
              "      <td>0.11440</td>\n",
              "      <td>0.1893</td>\n",
              "      <td>...</td>\n",
              "      <td>25.05</td>\n",
              "      <td>36.27</td>\n",
              "      <td>178.60</td>\n",
              "      <td>1926.0</td>\n",
              "      <td>0.1281</td>\n",
              "      <td>0.5329</td>\n",
              "      <td>0.4251</td>\n",
              "      <td>0.19410</td>\n",
              "      <td>0.2818</td>\n",
              "      <td>0.10050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>249</th>\n",
              "      <td>884689</td>\n",
              "      <td>11.52</td>\n",
              "      <td>14.93</td>\n",
              "      <td>73.87</td>\n",
              "      <td>406.3</td>\n",
              "      <td>0.10130</td>\n",
              "      <td>0.07808</td>\n",
              "      <td>0.04328</td>\n",
              "      <td>0.02929</td>\n",
              "      <td>0.1883</td>\n",
              "      <td>...</td>\n",
              "      <td>12.65</td>\n",
              "      <td>21.19</td>\n",
              "      <td>80.88</td>\n",
              "      <td>491.8</td>\n",
              "      <td>0.1389</td>\n",
              "      <td>0.1582</td>\n",
              "      <td>0.1804</td>\n",
              "      <td>0.09608</td>\n",
              "      <td>0.2664</td>\n",
              "      <td>0.07809</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>455 rows × 31 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-36e96d8a-920e-4758-bdfa-41f3292ac28d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-36e96d8a-920e-4758-bdfa-41f3292ac28d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-36e96d8a-920e-4758-bdfa-41f3292ac28d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#here we complete the splitting process\n",
        "#now we standardize the values\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "s=StandardScaler()\n",
        "x_tr=s.fit_transform(x_tr)\n",
        "x_tr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jyJajwjab8Mg",
        "outputId": "49494843-c7e3-40bb-ac38-7bd3d04a96de"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-0.17447005,  1.40381088,  1.79283426, ...,  1.044121  ,\n",
              "         0.52295995,  0.64990763],\n",
              "       [-0.24176487,  1.16565505, -0.14461158, ...,  0.5940779 ,\n",
              "         0.44153782, -0.85281516],\n",
              "       [-0.24147181, -0.0307278 , -0.77271123, ..., -0.64047556,\n",
              "        -0.31161687, -0.69292805],\n",
              "       ...,\n",
              "       [-0.24184096,  1.06478904,  0.20084323, ...,  0.01694621,\n",
              "         3.06583565, -1.29952679],\n",
              "       [ 0.49310842,  1.51308238,  2.3170559 , ...,  1.14728703,\n",
              "        -0.16599653,  0.82816016],\n",
              "       [-0.24167719, -0.73678981, -1.02636686, ..., -0.31826862,\n",
              "        -0.40713129, -0.38233653]])"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test=s.fit_transform(x_test)"
      ],
      "metadata": {
        "id": "BgqGgiuvcgod"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NXvAvpYYc9Y1",
        "outputId": "a9c90799-5d19-41cd-e09c-87a93a057fbc"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-0.16547737, -1.03542019, -0.16136458, ..., -0.40993146,\n",
              "         0.25492616, -0.21189431],\n",
              "       [-0.22077081,  0.14818437, -0.0809716 , ..., -0.12888121,\n",
              "        -0.65035293, -0.29408221],\n",
              "       [-0.22080268, -0.74328369, -0.14281236, ..., -0.62257259,\n",
              "         0.43829825,  0.25008122],\n",
              "       ...,\n",
              "       [-0.22066156,  0.77160968,  1.72065564, ...,  0.64383848,\n",
              "        -1.13870177, -0.0574606 ],\n",
              "       [-0.22700748, -0.34573712, -1.36313654, ..., -0.84127956,\n",
              "        -0.9630506 , -0.65729969],\n",
              "       [-0.22081353, -0.51138153, -0.98590795, ..., -0.9378274 ,\n",
              "        -0.98428316, -1.28099979]])"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_tr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_VHBsXSadMdr",
        "outputId": "3de497b7-a7a9-4dc2-84aa-95a5d96267cb"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "280    0\n",
              "186    0\n",
              "437    1\n",
              "329    0\n",
              "201    0\n",
              "      ..\n",
              "480    1\n",
              "422    1\n",
              "119    0\n",
              "256    0\n",
              "249    1\n",
              "Name: diagnosis, Length: 455, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#we finished the standardizing,now move to feature selection using principle component analysis\n",
        "from sklearn.decomposition import PCA\n",
        "p=PCA(n_components=2)"
      ],
      "metadata": {
        "id": "BmGP9xHkdUza"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_tr=p.fit_transform(x_tr)\n",
        "x_test=p.fit_transform(x_test)"
      ],
      "metadata": {
        "id": "nPbi4L5Vd6y2"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_tr"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9q0zpqZ5eSDl",
        "outputId": "7e755bed-6f83-4c34-8a52-255200ca0770"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 4.70448304e+00, -1.49604699e+00],\n",
              "       [ 2.04096467e-01, -3.66339572e+00],\n",
              "       [-2.24204574e+00, -1.25555453e+00],\n",
              "       [ 1.90803421e+00,  9.99189862e-01],\n",
              "       [ 1.45170301e+00, -2.19670269e+00],\n",
              "       [ 4.82071423e+00, -2.10499389e+00],\n",
              "       [-2.99269768e+00,  2.59363936e-01],\n",
              "       [-3.33700736e+00, -5.10437098e-01],\n",
              "       [ 3.46229581e+00, -2.89056905e+00],\n",
              "       [-3.42805427e+00,  2.45600027e+00],\n",
              "       [ 1.60991954e+00,  2.51129700e+00],\n",
              "       [-2.26318358e+00,  3.52478238e+00],\n",
              "       [ 7.00921404e+00, -5.20647129e+00],\n",
              "       [ 1.77004629e+00,  6.06972065e+00],\n",
              "       [ 4.65886522e+00,  2.69909890e+00],\n",
              "       [ 1.74508784e-01,  3.60330994e+00],\n",
              "       [-2.51738890e+00, -1.40018451e-01],\n",
              "       [ 2.31552494e+00,  2.37682215e+00],\n",
              "       [ 3.44239584e+00, -1.97745757e+00],\n",
              "       [-3.23625664e+00, -2.14451397e+00],\n",
              "       [-4.11940220e+00, -1.42732817e+00],\n",
              "       [ 1.67433923e-01,  1.56405592e+00],\n",
              "       [-3.22171564e+00, -1.01627246e+00],\n",
              "       [ 3.14251102e+00, -2.42430369e+00],\n",
              "       [-2.19617052e+00,  1.76969763e-01],\n",
              "       [-2.18038750e+00, -2.54249954e+00],\n",
              "       [-2.54586174e-01, -3.00203827e-01],\n",
              "       [-8.90536105e-01,  2.95739826e+00],\n",
              "       [ 1.69349683e+00, -2.48710096e+00],\n",
              "       [-3.10012126e+00, -7.45173568e-01],\n",
              "       [-4.73318156e+00, -8.46558018e-01],\n",
              "       [ 4.66688072e+00, -4.12133569e+00],\n",
              "       [-4.08664669e+00, -1.36734917e+00],\n",
              "       [-2.03156053e+00,  7.47539962e-01],\n",
              "       [ 3.36062063e+00, -2.38239929e+00],\n",
              "       [-4.53146738e+00, -1.82580411e+00],\n",
              "       [-2.70623739e-01, -3.64261268e-01],\n",
              "       [ 6.92323041e+00, -2.55712847e-01],\n",
              "       [-3.24318975e+00, -1.77742961e+00],\n",
              "       [-3.43482644e+00, -6.77672846e-01],\n",
              "       [-4.05684567e+00,  7.70687777e-01],\n",
              "       [ 3.55236866e+00,  2.08609935e+00],\n",
              "       [ 5.75736608e+00, -8.90359248e-01],\n",
              "       [-2.84590836e+00,  2.14849527e+00],\n",
              "       [ 3.01131256e+00, -1.03312653e+00],\n",
              "       [-3.52555424e+00, -2.20208627e+00],\n",
              "       [-3.99126582e+00, -2.08458994e+00],\n",
              "       [-1.34895493e+00, -1.42301716e+00],\n",
              "       [ 8.26788720e+00, -3.54272105e+00],\n",
              "       [ 1.89479969e-01,  1.96561687e+00],\n",
              "       [ 8.87831087e-01,  7.93200335e+00],\n",
              "       [ 3.86529373e+00,  2.59654152e+00],\n",
              "       [-3.35909683e+00,  8.35059493e-02],\n",
              "       [ 1.04483582e+00, -2.46751755e+00],\n",
              "       [-2.44486493e+00, -1.77058539e+00],\n",
              "       [-2.95429859e+00, -3.73863482e-01],\n",
              "       [-5.38315041e+00,  8.94320520e-01],\n",
              "       [-3.55549599e+00, -1.25694752e+00],\n",
              "       [-3.08030230e+00, -5.28583678e-01],\n",
              "       [ 6.84808021e+00, -6.46678875e-02],\n",
              "       [ 6.89692981e+00, -3.69090698e+00],\n",
              "       [-2.30550053e+00, -1.87570264e+00],\n",
              "       [ 1.25450962e+01,  8.52816225e-01],\n",
              "       [-2.24147135e+00,  1.37849164e+00],\n",
              "       [-3.51363788e+00, -1.04839205e+00],\n",
              "       [-3.56970092e+00,  1.69471435e+00],\n",
              "       [-1.92675549e+00, -1.66408024e+00],\n",
              "       [ 1.04945750e+01, -3.74240577e+00],\n",
              "       [ 6.73025594e+00,  1.85276502e+00],\n",
              "       [-2.68406688e+00, -4.67900408e-01],\n",
              "       [-1.67454405e+00, -1.30921037e+00],\n",
              "       [-9.63484770e-01, -3.52179657e+00],\n",
              "       [-4.69465572e+00, -2.51283218e-01],\n",
              "       [-4.61156121e+00,  1.30709415e+00],\n",
              "       [-7.53625307e-01,  4.87275809e-01],\n",
              "       [ 4.79100386e+00,  6.75891194e-01],\n",
              "       [ 4.68945708e+00,  2.11599178e+00],\n",
              "       [-2.13071516e+00, -4.16525467e-01],\n",
              "       [-2.25045505e+00, -1.41095562e-01],\n",
              "       [-4.45012227e+00, -8.46388383e-02],\n",
              "       [-2.39859158e+00, -1.44221491e+00],\n",
              "       [-3.44873169e+00, -1.17579871e+00],\n",
              "       [-3.37656488e-01,  9.32665388e-01],\n",
              "       [ 3.04054665e+00, -1.94385124e+00],\n",
              "       [-2.11538339e+00, -3.56538341e-01],\n",
              "       [-1.77998321e+00, -3.45794525e-01],\n",
              "       [-4.19525122e+00,  2.21968751e+00],\n",
              "       [-1.53238603e+00, -7.09455745e-02],\n",
              "       [ 2.99304693e+00,  3.75682818e+00],\n",
              "       [ 3.50677575e+00,  8.58694477e-01],\n",
              "       [-2.92270643e+00,  2.78173782e-02],\n",
              "       [-4.29322119e+00,  7.65470887e-02],\n",
              "       [ 3.11467796e+00, -4.02505235e+00],\n",
              "       [ 4.37555020e+00, -2.36469867e+00],\n",
              "       [ 5.58979315e+00,  1.03807425e+00],\n",
              "       [ 1.34138825e+00,  6.22510055e+00],\n",
              "       [ 2.40033742e+00, -3.94006765e+00],\n",
              "       [-1.06268190e+00,  7.59590716e-01],\n",
              "       [-2.04336135e+00,  1.33784185e+00],\n",
              "       [ 4.67570175e+00, -1.65820899e+00],\n",
              "       [-2.60046104e+00,  3.01299024e+00],\n",
              "       [-2.11533660e+00,  1.27699345e+00],\n",
              "       [-2.78482353e+00,  1.29933812e+00],\n",
              "       [-9.19852749e-01,  5.05675796e-01],\n",
              "       [ 2.67871734e+00,  3.65402504e+00],\n",
              "       [-3.97058536e+00,  6.81834130e-01],\n",
              "       [-5.43695099e-01, -7.88457085e-01],\n",
              "       [-5.63333718e-01, -9.38106263e-01],\n",
              "       [-1.35243106e+00,  1.36894801e+00],\n",
              "       [-2.38350299e+00, -1.09679808e-01],\n",
              "       [-2.57912071e+00, -1.49745413e+00],\n",
              "       [-1.91471053e+00,  2.80406831e-01],\n",
              "       [ 3.95639381e+00, -5.13415114e+00],\n",
              "       [ 8.00166383e-01,  2.08474750e+00],\n",
              "       [ 5.19352394e+00, -4.23072778e+00],\n",
              "       [ 2.08491878e-01,  3.32217952e+00],\n",
              "       [ 6.09435678e+00, -3.49742437e+00],\n",
              "       [-8.00843652e-01, -2.22254572e+00],\n",
              "       [-1.40437782e+00,  4.76337668e+00],\n",
              "       [ 1.20394113e+00,  1.19362792e+00],\n",
              "       [-3.94680247e+00,  1.08920407e+00],\n",
              "       [-2.18182968e+00,  1.61841816e+00],\n",
              "       [-9.14949972e-01, -1.60278878e-01],\n",
              "       [ 1.58458683e+01, -7.70603990e+00],\n",
              "       [ 4.17002864e+00, -1.04779498e+00],\n",
              "       [-3.11461718e+00,  1.54209356e+00],\n",
              "       [ 2.05886144e+00, -4.69752232e-01],\n",
              "       [-4.44015000e+00, -2.98680096e+00],\n",
              "       [-2.91480163e+00,  2.24771449e-01],\n",
              "       [-3.22604872e+00, -1.60052981e+00],\n",
              "       [-2.31908419e+00, -1.29493064e+00],\n",
              "       [ 4.42468004e+00, -1.94075507e-01],\n",
              "       [-4.08983414e+00,  7.42317271e-02],\n",
              "       [-1.68672005e+00,  7.83940733e-01],\n",
              "       [ 8.66459139e+00, -7.83482570e-01],\n",
              "       [ 6.84319588e+00,  9.67472515e+00],\n",
              "       [ 2.02964700e+00,  1.69092059e+00],\n",
              "       [-3.62761116e+00,  7.84623593e-01],\n",
              "       [ 2.74926859e+00,  4.98333549e-01],\n",
              "       [-2.80636509e+00, -3.31084269e-01],\n",
              "       [-3.52524693e+00, -2.50505765e+00],\n",
              "       [ 3.03930184e+00, -2.98765424e-01],\n",
              "       [ 2.19489791e+00,  4.52977137e+00],\n",
              "       [-4.56458125e+00, -3.21488099e+00],\n",
              "       [-2.86504864e+00, -1.75657202e+00],\n",
              "       [ 3.27143845e+00, -3.87710398e+00],\n",
              "       [ 6.19743831e+00,  7.51316090e+00],\n",
              "       [-3.86033022e+00, -9.85624962e-01],\n",
              "       [ 4.08592991e-01,  2.17801582e-01],\n",
              "       [ 2.30180515e+00,  2.14560798e+00],\n",
              "       [-5.06211627e+00,  4.38812969e-01],\n",
              "       [ 1.03474514e+01, -2.35772267e+00],\n",
              "       [-6.81981387e-01,  1.04582148e+00],\n",
              "       [ 2.50850482e+00, -3.95718338e+00],\n",
              "       [-2.27286085e+00,  3.60437772e-01],\n",
              "       [-9.55579009e-01, -1.13336324e-01],\n",
              "       [ 4.87667998e+00, -2.44823011e+00],\n",
              "       [-4.13719056e+00, -1.27906258e+00],\n",
              "       [ 4.56117208e-01,  4.98619298e-01],\n",
              "       [-2.72652091e+00, -7.98050271e-01],\n",
              "       [ 1.96149518e+00,  2.11022203e+00],\n",
              "       [-3.71192256e+00,  1.47435809e+00],\n",
              "       [-1.10488812e+00,  7.75087341e-01],\n",
              "       [-4.44155556e+00, -8.52096286e-01],\n",
              "       [-1.84636848e+00, -5.61532379e-01],\n",
              "       [ 1.57554526e+00, -4.22353855e-01],\n",
              "       [-3.30664820e+00, -2.27996955e+00],\n",
              "       [-3.60887929e+00, -1.33823131e+00],\n",
              "       [-1.15441950e+00, -3.20214997e+00],\n",
              "       [ 3.44397543e+00, -1.13519750e+00],\n",
              "       [ 2.18074980e+00,  3.64449330e+00],\n",
              "       [ 1.21684806e+00, -1.97237634e+00],\n",
              "       [-2.62378835e+00,  5.39592849e-01],\n",
              "       [ 1.52389856e+00,  2.08897034e+00],\n",
              "       [ 2.46467993e+00, -4.42250449e+00],\n",
              "       [-3.23239200e+00, -1.79659029e+00],\n",
              "       [-9.64688486e-01, -1.29465744e+00],\n",
              "       [-8.46579547e-01,  1.50026643e+00],\n",
              "       [ 2.44049436e+00, -1.40180571e-01],\n",
              "       [-1.35442230e+00,  1.14852396e-02],\n",
              "       [-2.53139281e+00,  3.34242627e+00],\n",
              "       [-2.14856629e+00,  1.57039070e-01],\n",
              "       [-2.59551311e+00, -1.71985813e-01],\n",
              "       [ 1.13388680e+00, -1.87199584e+00],\n",
              "       [-2.92047515e+00, -1.06814859e+00],\n",
              "       [-1.63430167e+00,  3.35230967e-01],\n",
              "       [ 1.64509109e+00,  5.39546809e-01],\n",
              "       [-3.13247362e+00,  1.03590004e+00],\n",
              "       [ 8.34423464e+00, -6.89069551e-01],\n",
              "       [ 4.07218490e+00, -4.74339269e+00],\n",
              "       [-3.79360951e+00,  4.25651732e+00],\n",
              "       [-3.33474200e+00, -9.91055022e-01],\n",
              "       [-2.06171941e+00, -1.02757806e+00],\n",
              "       [ 3.97990127e+00,  8.78317131e+00],\n",
              "       [-3.64007961e+00,  1.55640693e+00],\n",
              "       [ 5.87186824e+00,  7.54702202e-01],\n",
              "       [-3.69935223e+00,  6.28090149e-01],\n",
              "       [-1.73656536e+00,  9.71727975e-02],\n",
              "       [ 8.04933785e+00, -4.21960454e+00],\n",
              "       [ 3.89681907e+00,  6.11735377e-01],\n",
              "       [-3.22407057e+00, -1.95296675e+00],\n",
              "       [-1.55158963e+00, -4.13317029e-01],\n",
              "       [-2.48410430e+00, -3.58462284e-01],\n",
              "       [ 8.66902602e+00,  1.79480703e+00],\n",
              "       [ 3.66179192e+00, -1.97302359e+00],\n",
              "       [-5.72509173e-01, -4.33700748e-02],\n",
              "       [ 1.53951118e+00,  1.30354399e+00],\n",
              "       [-4.73337862e+00, -5.47910568e-01],\n",
              "       [-2.31321533e+00,  4.90957265e-01],\n",
              "       [ 2.91292969e-01,  2.60806632e-01],\n",
              "       [-2.57368650e+00, -1.26662330e+00],\n",
              "       [-3.79158926e-01, -8.71555613e-01],\n",
              "       [-1.96319634e+00,  2.43142378e+00],\n",
              "       [ 2.23565014e-01,  9.17550073e-01],\n",
              "       [ 2.03335859e+00, -2.78108700e+00],\n",
              "       [ 2.83609949e+00,  4.03983962e+00],\n",
              "       [ 1.17750528e-01,  6.91114904e-02],\n",
              "       [-2.50943432e+00,  8.02851247e-01],\n",
              "       [-3.66105149e+00,  2.48293003e+00],\n",
              "       [-3.06242618e+00,  2.53023633e-01],\n",
              "       [ 3.52703760e+00,  7.27564925e-01],\n",
              "       [ 3.54465606e+00, -2.00473308e+00],\n",
              "       [ 1.23782925e+01,  2.31733000e+00],\n",
              "       [ 1.12343170e+01,  4.48019942e+00],\n",
              "       [ 3.77979598e+00, -2.94759203e+00],\n",
              "       [-1.43035089e+00,  3.28050699e+00],\n",
              "       [-2.58409336e+00, -2.43426028e+00],\n",
              "       [ 1.17750289e-01,  6.53602965e+00],\n",
              "       [-3.45653543e+00,  6.57285859e-01],\n",
              "       [-2.71838526e+00, -1.23285687e+00],\n",
              "       [-1.43542696e+00,  1.31359742e+00],\n",
              "       [-2.34368976e+00, -5.85472287e-01],\n",
              "       [-2.94316102e+00, -5.75127982e-01],\n",
              "       [ 6.32171648e+00, -5.98739276e+00],\n",
              "       [-2.33234726e+00, -1.37943372e+00],\n",
              "       [-2.68353188e+00,  2.40770314e+00],\n",
              "       [-4.73904855e-01,  1.99225995e+00],\n",
              "       [-1.59934614e+00,  4.57277065e-01],\n",
              "       [-3.56225794e+00, -2.66938452e+00],\n",
              "       [-1.95083007e+00, -2.44369555e-01],\n",
              "       [-2.42251032e+00, -1.04416255e+00],\n",
              "       [-6.90282944e-01,  3.46944708e+00],\n",
              "       [ 1.08939553e+00,  1.24354784e-01],\n",
              "       [-2.05335361e-01,  2.05224511e+00],\n",
              "       [-3.12538895e+00, -2.30187611e+00],\n",
              "       [-8.50091150e-01, -2.02626863e+00],\n",
              "       [ 4.29385030e+00, -9.19051376e-01],\n",
              "       [-4.05576921e+00, -1.52800185e+00],\n",
              "       [-2.34950509e+00,  2.00176836e+00],\n",
              "       [-4.12004414e+00, -3.68053171e-01],\n",
              "       [-8.87283875e-01, -2.60300283e+00],\n",
              "       [-3.25877464e+00,  1.02213873e+00],\n",
              "       [-1.05166903e+00,  2.29317966e+00],\n",
              "       [-1.27608421e+00, -2.03908389e+00],\n",
              "       [-2.01304353e+00, -3.19481073e+00],\n",
              "       [ 1.49332873e+00, -1.58549114e+00],\n",
              "       [-7.98945531e-01, -1.22860973e+00],\n",
              "       [ 6.77110806e+00, -2.13985641e+00],\n",
              "       [ 5.83935508e+00, -2.10987835e+00],\n",
              "       [-3.14439874e+00, -2.31344374e+00],\n",
              "       [-2.94538569e+00, -1.14000009e+00],\n",
              "       [ 1.92376645e+00,  1.72891865e-01],\n",
              "       [ 2.04415494e+00,  4.13953622e+00],\n",
              "       [ 2.54254284e+00,  4.13273962e-01],\n",
              "       [ 9.98414760e+00,  1.37606920e+00],\n",
              "       [-1.10924034e+00,  2.86808457e-01],\n",
              "       [ 3.05012980e+00, -1.72788865e+00],\n",
              "       [-2.92190760e+00, -4.89326175e-01],\n",
              "       [ 1.04598900e+00,  8.76422253e-01],\n",
              "       [-2.14442851e+00,  1.48311053e+00],\n",
              "       [ 2.76301393e+00,  4.91000737e-01],\n",
              "       [-2.86874903e+00,  9.77695633e-01],\n",
              "       [ 5.21740254e+00,  6.65360839e-01],\n",
              "       [-3.14627395e+00, -4.17512633e-01],\n",
              "       [-2.47802773e+00, -8.58383296e-01],\n",
              "       [-6.11013596e-01, -3.75971900e-02],\n",
              "       [-2.38305508e+00, -2.52441821e+00],\n",
              "       [-2.58757370e+00,  2.45831604e+00],\n",
              "       [-2.32202306e+00, -4.92175049e-01],\n",
              "       [ 7.79023401e+00,  2.61511422e+00],\n",
              "       [ 4.71394781e+00, -1.40057323e+00],\n",
              "       [ 3.23015368e+00, -2.41216174e+00],\n",
              "       [ 3.26177364e+00,  2.28547823e+00],\n",
              "       [-6.09882559e-01, -3.00916442e-01],\n",
              "       [-4.09846396e+00,  1.02918315e+00],\n",
              "       [-1.84902451e+00,  5.82083596e-01],\n",
              "       [-2.29743303e+00, -1.27244623e-01],\n",
              "       [-4.85331906e+00, -2.08789366e+00],\n",
              "       [-2.68261146e+00,  1.53035565e-01],\n",
              "       [ 5.17601422e-01,  2.29027472e-01],\n",
              "       [-2.48463546e+00, -8.05933785e-01],\n",
              "       [-2.44244186e+00,  3.13596531e+00],\n",
              "       [-3.04517145e+00,  1.64659087e+00],\n",
              "       [ 4.12438239e+00, -2.20610389e+00],\n",
              "       [ 1.63666125e-01, -1.04353742e+00],\n",
              "       [-4.67624089e+00, -1.90129521e+00],\n",
              "       [ 4.19207580e+00,  1.16789428e+00],\n",
              "       [ 4.78169605e-01,  3.25678377e+00],\n",
              "       [-3.30517719e+00, -1.25595760e+00],\n",
              "       [-1.51702913e+00,  1.37055970e+00],\n",
              "       [-1.54407423e+00, -1.88379559e+00],\n",
              "       [ 2.62833790e-01, -2.82010253e+00],\n",
              "       [-1.69739037e+00, -1.71035822e+00],\n",
              "       [-5.42389952e+00,  4.39469454e-01],\n",
              "       [-2.06754158e+00,  2.30374423e+00],\n",
              "       [-1.04931046e+00,  2.12384540e+00],\n",
              "       [ 5.67675643e+00, -1.78552386e-01],\n",
              "       [-2.26319570e+00,  8.26366485e-01],\n",
              "       [-4.68548908e+00, -8.89812401e-01],\n",
              "       [ 4.49536451e+00, -1.59264382e+00],\n",
              "       [-3.89656334e+00,  7.71912504e-01],\n",
              "       [ 6.05577890e-01,  6.55609238e-01],\n",
              "       [ 4.56245888e-01,  8.09331222e-02],\n",
              "       [ 8.64201964e+00,  2.79624826e-01],\n",
              "       [-1.36568370e+00,  9.03462012e-01],\n",
              "       [-1.29260664e+00,  5.28019426e+00],\n",
              "       [-8.92944438e-01,  3.46459070e+00],\n",
              "       [-3.72860180e+00, -7.65600361e-01],\n",
              "       [ 2.59011649e+00,  1.09020140e+00],\n",
              "       [-6.70826445e-01, -1.09243662e+00],\n",
              "       [-3.27095001e+00, -2.19385424e+00],\n",
              "       [ 2.56196121e+00, -1.22429370e+00],\n",
              "       [-2.92571923e+00, -1.14102913e+00],\n",
              "       [-1.58847988e+00,  4.89884151e-03],\n",
              "       [-1.43069095e+00,  2.35618834e+00],\n",
              "       [-3.37909252e+00,  6.90945019e-02],\n",
              "       [-1.54088798e+00,  1.21122356e+00],\n",
              "       [-3.39748015e+00,  3.33409876e-01],\n",
              "       [-5.39794133e-01,  7.03744545e+00],\n",
              "       [-2.88340673e+00, -1.16415808e+00],\n",
              "       [-2.55804394e+00,  4.73230572e-01],\n",
              "       [-2.78617896e+00,  1.29461496e+00],\n",
              "       [ 3.86622319e+00,  2.56790123e+00],\n",
              "       [-1.19384172e+00,  1.17245857e+00],\n",
              "       [-8.67549628e-01,  1.64765822e+00],\n",
              "       [ 5.87134764e+00,  4.81483857e+00],\n",
              "       [ 2.58702831e+00,  3.11983010e+00],\n",
              "       [-8.58162132e-01, -1.63004793e+00],\n",
              "       [-2.48776295e+00,  2.62169187e+00],\n",
              "       [-1.83463167e+00,  8.91074430e-01],\n",
              "       [ 3.28937781e+00,  1.84546332e+00],\n",
              "       [ 7.33905237e+00, -1.04376527e+00],\n",
              "       [-5.65032509e-01, -1.49024758e+00],\n",
              "       [-1.36911267e+00, -2.82380614e-01],\n",
              "       [-2.42327632e+00,  6.70079972e-01],\n",
              "       [-2.24210005e+00, -9.60611101e-01],\n",
              "       [ 1.43245974e+00, -2.57611411e+00],\n",
              "       [-4.39423020e+00, -3.78190883e-01],\n",
              "       [ 2.96836069e+00,  3.07881869e+00],\n",
              "       [-9.04603175e-01, -2.15014606e+00],\n",
              "       [-4.10460419e+00, -2.54925461e+00],\n",
              "       [ 2.42281933e+00,  3.70757813e-01],\n",
              "       [ 2.85675704e+00, -1.28988637e+00],\n",
              "       [-3.92271756e+00,  1.01892907e+00],\n",
              "       [-2.95545572e+00, -2.88558947e+00],\n",
              "       [ 6.73816431e+00,  3.20779756e-01],\n",
              "       [ 4.32394430e+00,  1.64889157e-01],\n",
              "       [-2.40968374e+00,  2.78835969e-01],\n",
              "       [ 2.25917557e+00, -1.59171879e+00],\n",
              "       [-2.06466352e+00, -5.46566980e-01],\n",
              "       [ 4.43675207e+00,  3.03454663e+00],\n",
              "       [ 1.14572649e+00,  1.82169732e+00],\n",
              "       [ 4.46905598e+00,  2.76522836e+00],\n",
              "       [-5.48255425e-01, -5.23695173e-01],\n",
              "       [ 1.13324252e+00,  1.91278345e+00],\n",
              "       [-4.46962699e+00, -9.00829455e-01],\n",
              "       [-1.67406574e+00, -1.17200630e+00],\n",
              "       [-2.75270887e+00, -1.62016708e+00],\n",
              "       [ 4.96167357e+00,  3.64838674e+00],\n",
              "       [-3.53382964e+00, -6.14232079e-01],\n",
              "       [ 1.11505779e+00,  4.45861664e+00],\n",
              "       [-3.55698083e+00,  1.56260269e+00],\n",
              "       [ 2.55273380e+00, -5.39110992e-01],\n",
              "       [ 4.28525638e+00, -4.27649254e+00],\n",
              "       [-5.00819987e+00, -3.42289245e+00],\n",
              "       [ 1.01416504e+00, -2.06853235e+00],\n",
              "       [-3.93159802e+00,  3.91998810e-01],\n",
              "       [-3.05937217e+00,  2.27384648e-01],\n",
              "       [ 6.02140218e+00,  1.72880833e+00],\n",
              "       [-1.39277431e+00,  8.83433785e-01],\n",
              "       [-4.01733633e-01, -3.79714549e-01],\n",
              "       [ 6.25106808e+00, -1.54478490e+00],\n",
              "       [-3.21293769e+00, -8.71124766e-01],\n",
              "       [-9.80927728e-01,  1.86374508e+00],\n",
              "       [ 1.69464200e-01,  1.78321936e+00],\n",
              "       [ 4.97888809e+00, -6.57060993e+00],\n",
              "       [-2.10325832e+00,  3.33853766e-01],\n",
              "       [ 1.17124015e+01, -7.11182679e+00],\n",
              "       [-2.11703412e+00, -1.17017347e+00],\n",
              "       [-3.36883675e+00, -3.16668153e+00],\n",
              "       [-5.45326976e-01,  2.10010762e+00],\n",
              "       [ 7.97463584e-01, -2.31868294e+00],\n",
              "       [ 6.87461283e+00, -5.41321172e+00],\n",
              "       [-1.57539283e+00, -1.63719085e+00],\n",
              "       [ 4.71950330e+00, -1.36169820e+00],\n",
              "       [ 6.08714995e+00,  7.14232391e+00],\n",
              "       [-2.95645553e+00, -1.54503424e+00],\n",
              "       [-7.35029030e-01,  1.65710709e+00],\n",
              "       [-4.18770258e+00, -1.42861847e+00],\n",
              "       [-3.39583091e+00, -1.50806102e+00],\n",
              "       [-1.37176865e-01, -3.46746255e+00],\n",
              "       [-3.32486069e+00,  1.13726970e+00],\n",
              "       [-2.18061760e-01, -3.58547913e-01],\n",
              "       [-3.71441090e-01,  1.28868208e+00],\n",
              "       [ 5.96411841e-01, -1.73250546e+00],\n",
              "       [-2.77501690e+00,  2.11557052e+00],\n",
              "       [ 1.11498129e+00,  6.93540469e-01],\n",
              "       [ 3.82437355e+00, -4.38592137e-01],\n",
              "       [ 5.44446947e+00, -1.21099415e+00],\n",
              "       [-1.30391045e+00, -1.73444608e+00],\n",
              "       [-2.64215284e+00, -9.00517977e-01],\n",
              "       [-4.72094269e+00, -3.07935680e+00],\n",
              "       [-3.05512274e+00,  2.50195017e-01],\n",
              "       [-1.04652301e+00, -2.16830390e+00],\n",
              "       [ 1.75429802e+00,  2.16952220e+00],\n",
              "       [ 1.14407429e+00, -1.32994314e+00],\n",
              "       [ 1.62161767e+00, -5.14749304e-02],\n",
              "       [-2.78236791e+00,  4.61545802e-01],\n",
              "       [-1.41614738e+00, -1.90562737e+00],\n",
              "       [-2.87347257e+00, -2.19421526e+00],\n",
              "       [ 2.89217453e+00,  1.35514216e+00],\n",
              "       [ 2.15723798e+00, -3.80507627e+00],\n",
              "       [-1.47632262e+00,  3.37772841e+00],\n",
              "       [-3.07074448e+00, -2.78708612e+00],\n",
              "       [-5.25306239e-01, -1.19203443e+00],\n",
              "       [ 3.39277486e+00, -2.03773657e+00],\n",
              "       [ 1.95660485e-01, -3.20057476e+00],\n",
              "       [ 8.76638431e+00,  1.75385151e+00],\n",
              "       [-1.80275157e+00,  2.26691974e+00],\n",
              "       [-7.50773002e-01, -9.46042038e-01],\n",
              "       [-5.57021921e-01,  1.92936707e+00],\n",
              "       [-2.43562226e+00,  6.03605532e-01],\n",
              "       [-1.69170581e+00,  4.00196459e-01],\n",
              "       [ 9.33771027e-01,  6.71720072e+00],\n",
              "       [ 3.11165675e+00, -1.60070375e+00],\n",
              "       [ 3.55442001e+00,  5.54435364e+00],\n",
              "       [-2.02766981e+00, -1.22155732e+00],\n",
              "       [-1.07787008e+00, -1.75283509e+00],\n",
              "       [-1.30295505e+00,  8.70508065e-01],\n",
              "       [-1.35258815e+00,  3.83864091e+00],\n",
              "       [ 6.59566498e+00,  1.21669674e+01],\n",
              "       [-6.42521259e-03, -5.98048697e-01],\n",
              "       [-4.80729109e+00, -1.84005372e+00],\n",
              "       [ 8.32872079e+00,  3.14806779e+00],\n",
              "       [-2.10939269e+00,  1.66251547e+00],\n",
              "       [ 4.40409883e+00, -1.10144982e+00],\n",
              "       [-4.23943950e+00,  2.14945197e+00],\n",
              "       [ 1.11323825e+00,  7.40643623e+00],\n",
              "       [-3.86689726e+00, -4.72289318e-01],\n",
              "       [-5.26995235e-01, -5.62098700e-02],\n",
              "       [-3.06035475e+00, -7.86514893e-01],\n",
              "       [-1.78656428e+00,  7.29541164e-01],\n",
              "       [ 6.80453647e-01, -2.36832083e+00],\n",
              "       [ 6.09046380e+00, -1.97553503e+00],\n",
              "       [-2.58314779e+00,  3.51124428e-01]])"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# we finished the feature selection \n",
        "#now we can create a model\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "l=LogisticRegression(max_iter=500)\n",
        "l.fit(x_tr,y_tr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "id": "Hv-tvqmjeXkx",
        "outputId": "efd8d510-b08d-470a-8fbe-82c7b822b5b9"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression(max_iter=500)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=500)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=l.predict(x_test)"
      ],
      "metadata": {
        "id": "_RGTeBabe8P9"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hJ5MzUNQfG6B",
        "outputId": "89340c13-c7b5-45b9-b798-c1d1585be047"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '0', '1',\n",
              "       '0', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1',\n",
              "       '1', '0', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0',\n",
              "       '0', '0', '1', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1',\n",
              "       '1', '0', '0', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1',\n",
              "       '1', '0', '1', '0', '0', '1', '0', '0', '0', '1', '0', '1', '0',\n",
              "       '0', '0', '0', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0',\n",
              "       '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '0', '1', '1',\n",
              "       '1', '0', '0', '1', '0', '1', '1', '0', '1', '1'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#we created model succesfully,now we should find the accuracy of the model\n",
        "from sklearn import metrics"
      ],
      "metadata": {
        "id": "tO3oAle1fJ4v"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ascore=metrics.accuracy_score(y_test,y_pred)"
      ],
      "metadata": {
        "id": "YPCjGIGrfgW9"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ascore"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fNxQciVbftYp",
        "outputId": "1289fa54-da3e-43ec-b7ef-24860d706ef0"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9298245614035088"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "this is the accuracy of our model"
      ],
      "metadata": {
        "id": "cf_7Y7LxgM5z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cm=metrics.confusion_matrix(y_test,y_pred)"
      ],
      "metadata": {
        "id": "__F_HzPMfuoK"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CM668ywjf63m",
        "outputId": "f600851b-0c69-4ea6-d17c-e84dbe04a59d"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[37,  3],\n",
              "       [ 5, 69]])"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#here our model is wrong in 8 cases out of all cases"
      ],
      "metadata": {
        "id": "iGCifObMf71Z"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}